//SBARINFO Armor detection counters
Actor WearsNoArmor :			Inventory { Inventory.MaxAmount 1 }
Actor WearsSomeArmor :			WearsNoArmor {}
Actor WearsSecurityVest :		WearsNoArmor {}
Actor WearsBodyArmor :			WearsNoArmor {}
Actor WearsTacticalSet :		WearsNoArmor {}
Actor WearsLuckie :				WearsNoArmor {}
Actor WearsArmorBonus2 :		WearsNoArmor {}
Actor WearsMegasphereArmor2 :	WearsNoArmor {}

//Armors themselves
ACTOR SecurityVest : GreenArmor replaces GreenArmor
{
	Inventory.PickupMessage "Obtained a security vest."
	Inventory.PickupSound "Armor/Pickup"
	States
	{
	Spawn:
		ARM1 A -1
		Stop
	}
}

ACTOR BodyArmor : BlueArmor //replaces BlueArmor
{
	Inventory.PickupMessage "Obtained a body armor!"
	Inventory.PickupSound "Armor/Pickup"
	States
	{
	Spawn:
		ARM2 A -1
		Stop
	}
}

ACTOR TacticalSet : BlueArmor
{
	Inventory.PickupMessage "Obtained a tactical set!"
	Inventory.PickupSound "Armor/Pickup"
	Inventory.Icon "ARM3A0"
	Armor.SavePercent 66
	Armor.SaveAmount 400
	DamageFactor "Normal", 0.5
	States
	{
	Spawn:
		ARM3 A -1
		Stop
	}
}

ACTOR BlueArmorSpawner : RandomSpawner replaces BlueArmor
{
	DropItem "BodyArmor", 255, 8
	DropItem "TacticalSet", 255, 1
}

ACTOR Luckie : ArmorBonus
{
	Inventory.PickupMessage "Nabbed a pack of luckies."
	Inventory.PickupSound "Cigs/Pickup"
	Inventory.Icon "BON2A0"
	Armor.SaveAmount 1
	Armor.MaxSaveAmount 999
	States
	{
	Spawn:
		BON2 A -1
		Stop
	}
}

ACTOR LuckieBoostHundred : Luckie
{
	Armor.SaveAmount 100
}

ACTOR LuckieBoostTwentyFive : Luckie
{
	Armor.SaveAmount 25
}

ACTOR LuckiePickup : CustomInventory
{
	Inventory.MaxAmount 0
	Inventory.PickupSound "Cigs/Pickup"
	Inventory.PickupMessage "Nabbed a pack of luckies."
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ALWAYSPICKUP
	//+INVENTORY.UNDROPPABLE
	States
	{
	Spawn:
		BON2 A -1
		Stop
	Pickup:
		TNT1 A 0 {
			A_GiveInventory("NicotineToken",1);
			A_GiveInventory("Luckie"); //Due to nature of armor bonuses, I had to resolve to such idiotic way to handle this.
			A_GiveInventory("Luckie");
			
			//Nicotine rush warnings.
			If(CountInv("NicotineToken") >= 75 && !CountInv("NicotineAchtung1")) { A_Print("\c[white]about 25 cigs to nicotine rush."); A_GiveInventory("NicotineAchtung1",1); }
			If(CountInv("NicotineToken") >= 90 && !CountInv("NicotineAchtung2")) { A_Print("\c[white]about 10 cigs to nicotine rush."); A_GiveInventory("NicotineAchtung2",1); }
			If(CountInv("NicotineToken") >= 95 && !CountInv("NicotineAchtung3")) { A_Print("\c[gold]about 5 cigs to nicotine rush!");   A_GiveInventory("NicotineAchtung3",1); }
			
			//Blazing Booster bonus.
			If(CountInv("BlazingBooster") && random(1,5) == 1) {
				A_GiveInventory("NicotineToken",1);
			}
		}
		TNT1 A 0 A_JumpIfInventory("LuckyStrike",1,"SpinTheWheel")
		Goto CheckNicotine
	SpinTheWheel:
		TNT1 A 0 A_Jump(64,"Type1","Type2")
	Type1:
		TNT1 A 0 {
			A_GiveInventory("Luckie");
		}
		Goto Chance
	Type2:
		TNT1 A 0 {
			A_GiveInventory("Luckie");
			A_GiveInventory("Luckie");
		}
	Chance:
		TNT1 A 0 A_Jump(6,"YoureWiener")
		Goto CheckNicotine
	YoureWiener:
		TNT1 A 0 {
			A_GiveInventory("LuckyStrikeItem");
			A_GiveInventory("LuckieBoostHundred");
			if(A_JumpIf(CountInv("AlchemistsPotency") > 0, "Null")) {
				A_GiveInventory("LuckieBoostTwentyFive");
			}
		}
		Goto CheckNicotine
	CheckNicotine:
		TNT1 A 0 A_JumpIf(CountInv("NicotineToken") >= 100, "NicotineRush")
		Stop
	NicotineRush:
		TNT1 A 0 {
			A_TakeInventory("NicotineAchtung1",1);
			A_TakeInventory("NicotineAchtung2",1);
			A_TakeInventory("NicotineAchtung3",1);
			A_TakeInventory("NicotineToken",100);
			A_GiveInventory("NicotineRushItem");
		}
		Stop
	}
}

ACTOR ArmorBonus2 : ArmorBonus
{
	Inventory.Pickupmessage "Picked up an armor bonus."
	Inventory.PickupSound "Syringe/Boost"
	Inventory.Icon "ARM2A0"
	Armor.Savepercent 50
	Armor.Saveamount 1
	Armor.MaxSaveAmount 999
	Armor.MaxBonus 1
	Armor.MaxBonusMax 100
	+INVENTORY.ALWAYSPICKUP
	+FLOATBOB
	//+COUNTITEM
	states
	{
	Spawn:
		BON2 B -1
		Stop
	}
}