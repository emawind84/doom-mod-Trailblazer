Actor RendSelected : Inventory { Inventory.MaxAmount 1 }
Actor RendUpgrade : Inventory { Inventory.MaxAmount 1 }

Actor FleshrendPickup : CustomInventory
{
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Obtained a really damn stylish ''Fleshrend'' sawed-off! Peeling off the skins - multiple enemies at a time! (3)"
	States
	{
	Spawn:
		RNDG X -1
		Stop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"CheckAmmo")
		Goto GiveItNevertheless
	CheckAmmo:
		TNT1 A 0 A_JumpIfInventory("ShellsAmmo",0,"Bailure")
	GiveItNevertheless:
		TNT1 A 0 { if(CountInv("FleshrendPickupCounter") == 2) { A_SetMugshotState("Grin"); } }
		TNT1 A 0 A_GiveInventory("Fleshrend")
		TNT1 A 0 A_GiveInventory("FleshrendPickupCounter")
		Stop
	Bailure:
		RNDG X 1
		Fail
	}
}

Actor FleshrendPickup2 : FleshrendPickup
{
	States
	{
	Spawn:
		RNDG X -1
		Stop
	Pickup:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"CheckAmmo")
		Goto GiveItNevertheless
	CheckAmmo:
		TNT1 A 0 A_JumpIfInventory("ShellsAmmo",0,"CheckAmmo2")
		Goto GiveItNevertheless
	CheckAmmo2:
		TNT1 A 0 A_JumpIfInventory("DemShellsAmmo",0,"Bailure")
	GiveItNevertheless:
		TNT1 A 0 { if(CountInv("FleshrendPickupCounter") == 2) { A_SetMugshotState("Grin"); } }
		TNT1 A 0 A_GiveInventory("Fleshrend")
		TNT1 A 0 A_GiveInventory("FleshrendPickupCounter")
		TNT1 A 0 A_GiveInventory("DemShellsAmmo",1)
		Stop
	Bailure:
		RNDG X 1
		Fail
	}
}


Actor FleshrendPickupCounter : Inventory
{
	Inventory.Icon "TNT1A0"
	Inventory.MaxAmount 3
	Inventory.Amount 1
	-INVBAR
	States
	{
	Spawn:
		RNDG X -1
		Stop
	}
}

Actor Fleshrend : Weapon
{
	Weapon.AmmoUse 2
	Weapon.AmmoUse2 2
	Weapon.AmmoGive 6
	Weapon.AmmoType "ShellsAmmo"
	Weapon.AmmoType2 "ShellsAmmo"
	Weapon.SlotNumber 3
	Weapon.SelectionOrder 2
	Weapon.UpSound "Fleshrend/Up"
	Weapon.Kickback 150
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Obtained a really damn stylish ''Fleshrend'' sawed-off! Peeling off the skins - multiple enemies at a time! (3)"
	Obituary "%o was plastered over local furniture by %k's ''Fleshrend''."
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.0
	Weapon.BobRangeY 0.5
	Weapon.BobRangeX 0.7
	+NOALERT
	+AMMO_CHECKBOTH
	//+NOAUTOAIM
	States
	{
	Ready:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"TwinReady")
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,"ReadyAnim")
		RNDY A 0
		Goto ReadyAnim
	TwinReady:
		3N2L A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RN2L A 0
	ReadyAnim:
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),1)
		"####" BC 1
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,1)
		"####" EF 1
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,1)
		"####" H 1
		TNT1 A 0 { If(A_JumpIf(CountInv("FleshrendPickupCounter") >= 2,"Null")) { A_Overlay(-3,"LIdle"); Return; } Else { A_Overlay(-3,"SingleLIdle");  Return; } }
		TNT1 A 0 { If(A_JumpIf(CountInv("FleshrendPickupCounter") >= 2,"Null")) { A_Overlay(2,"RIdle"); Return; } Else { A_Overlay(2,"SingleRIdle"); Return; } }
	ReadyMain:
		TNT1 A 1 A_WeaponReady
		Loop
	Fire:
		TNT1 A 0
		GOto ReadyMain
		
	SingleLIdle:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"LIdle")
		TNT1 A 1
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch")
		Loop
	Deselect:
		TNT1 A 0 {
			A_TakeInventory("ShotsWereFired");
			A_TakeInventory("RendSelected");
			A_TakeInventory("PowerCrafterTimer");
			SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
			A_Overlay(2,"");
			A_Overlay(-3,"");
		}
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"TwinDeselect")
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,"DeselectMain")
		RNDN A 0
		Goto DeselectMain
	TwinDeselect:
		3N3N A 0 A_JumpIfInventory("RendUpgrade",1,"DeselectMain")
		RN3N A 0
	DeselectMain:
		"####" CBA 1
	Czumulungwa:
		TNT1 AA 0 A_Lower
		TNT1 A 1 A_Lower
		Loop
	Select:
		TNT1 A 0 { 
			A_GiveInventory("RendSelected");
			SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
		}
	HonkaCzongka:
		TNT1 A 0 A_Raise
		TNT1 A 1 A_Raise
		Loop

	SingleRIdle:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"RIdle")
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 1
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "SingleCaberToss")
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "SingleRFire")
		Loop
	SingleCaberToss:
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDN A 0
		"####" CBA 1
	SingleCaberMain:
		TNT1 A 0 A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE)

		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,1)
		TNT1 A 1
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",1,0.9);
				A_PlaySound("Machete2/Slash",5,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		MCHT ABC 1
		TNT1 A 0 A_JumpIfInventory("PowerStrength2",1,3)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		TNT1 A 0 A_Jump(256,2)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		// This solution is ten times better. Just let it bouncecount out.
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),1)
		MCHT E 1
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,1)
		MCHT G 1
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,1)
		MCHT I 1
		TNT1 A 3
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "SingleCaberMain")

		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDN A 0
		"####" ABC 1
		Goto SingleRIdle
	CaberToss:
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDN A 0
		"####" CBA 1
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,1)
		TNT1 A 1
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",1,0.9);
				A_PlaySound("Machete2/Slash",5,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		MCHT ABC 1
		TNT1 A 0 A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_JumpIfInventory("PowerStrength2",1,3)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		TNT1 A 0 A_Jump(256,2)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		// This solution is ten times better. Just let it bouncecount out.
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),1)
		MCHT E 1
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,1)
		MCHT G 1
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,1)
		MCHT I 1
		TNT1 A 3
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "CaberMain")

		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDN A 0
		"####" ABC 1
		Goto RIdle
		
	SingleRFire:
		//"####" A 0 A_JumpIfInventory("RendUpgrade",1,"SingleLUpgFire")
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",2,"SingleRMain")
		Goto SingleRNope
		"####" A 0 A_JumpIfInventory("BlueMana",4,"SingleRMain")
		Goto SingleRNope
	/*SingleLUpgFire:
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",3,2)
		Goto SingleRNope
		"####" A 0 A_JumpIfInventory("BlueMana",6,1)
		Goto SingleRNope
		"####" A 0 A_TakeInventory("ShellsAmmo",1) //Nope. Not doing another hexen counter check here. Fuuuuuuuck that.
		"####" A 0 A_TakeInventory("BlueMana",2)*/
	SingleRMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",1);
			A_FireCustomMissile("GunsmokeSpawner_Medium",0,0,12,0,FPF_NOAUTOAIM);
			A_AlertMonsters;
			A_Recoil(2.0);
			A_Overlay(3,"RGunflash");
			A_FireBullets(8.0, 2.0, 16, 5, "BulletPuff");
			If(CountInv("RendUpgrade")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("TricorneShot")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDF A 0
		"####" A 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDY A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" BC 1
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" EFG 1
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" I 1
		"####" I 0 A_PlaySound("Fleshrend/Out",4,0.6)
		"####" AA 0 A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM)
		"####" A 0 { If(CountInv("RendUpgrade")) {
			A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" A 0 { If(CountInv("TricorneShot")) {
			A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" KL 1
		"####" O 0 A_PlaySound("Fleshrend/In",4,0.5)
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" QRST 1
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,4)
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 2
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "SingleRFire")
		Goto SingleRIdle
	SingleRNope:
		"####" A 0 A_PlaySound("Fleshrend/Dry",4,0.8)
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDT A 0
		"####" ABC 1
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 8
		Goto SingleRIdle
	
  Punch:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		"####" A 0 A_PlaySound("Punch/Swing",6,1.0)
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2)
		QML1 A 0 A_Jump(256,3)
		FML1 A 0 A_SetBlend("Orange",0.05,10)
		FML1 A 0 A_PlaySound("Melee/Firepunch",5)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIfInventory("KineticFist",1,"SingleKineticPunch")
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 100)
		"####" A 0 A_Jump(256,"SinglePunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150,0.06)
		Goto SinglePunchContinue
	SingleKineticPunch:
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 300)
		"####" A 0 A_Jump(256,"SinglePunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker2", 350,0.06)
		Goto SinglePunchContinue
	SinglePunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" I 1
		"####" J 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" K 1
		TNT1 A 5
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch")
		Goto SingleLIdle
		
	TwinPunch:
		3N2N A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RN2N A 0
		"####" CBA 1
	PunchFleshAndBlood:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		"####" A 0 A_PlaySound("Punch/Swing",6,1.0)
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2)
		QML1 A 0 A_Jump(256,3)
		FML1 A 0 A_SetBlend("Orange",0.05,10)
		FML1 A 0 A_PlaySound("Melee/Firepunch",5)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIfInventory("KineticFist",1,"KineticPunch")
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 100)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150,0.06)
		Goto PunchContinue
	KineticPunch:
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 300)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker2", 350,0.06)
		Goto PunchContinue
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" I 1
		"####" J 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" K 1
		TNT1 A 5
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchFleshAndBlood")
		3N2N A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RN2N A 0
		"####" ABC 1
		Goto LIdle
		
	LIdle:
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" B 1
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK),"LFire")
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "TwinPunch")
		Loop
	LFire:
		//"####" A 0 A_JumpIfInventory("RendUpgrade",1,"LUpgFire")
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",2,"LMain")
		Goto LNope
		"####" A 0 A_JumpIfInventory("BlueMana",4,"LMain")
		Goto LNope
	  /*LUpgFire:
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",3,2)
		Goto LNope
		"####" A 0 A_JumpIfInventory("BlueMana",6,1)
		Goto LNope
		"####" A 0 A_TakeInventory("ShellsAmmo",1)
		"####" A 0 A_TakeInventory("BlueMana",2)*/
	LMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",1);
			A_FireCustomMissile("GunsmokeSpawner_Medium",0,0,-14,0,FPF_NOAUTOAIM);
			A_Overlay(-2,"LGunflash");
			A_AlertMonsters;
			A_Recoil(2.0);
			A_FireBullets(8.0, 2.0, 16, 5, "BulletPuff");
			If(CountInv("RendUpgrade")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("TricorneShot")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDF A 0
		"####" C 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" D 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		3NDL A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDL A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" BC 1
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" EFG 1
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" I 1
		"####" A 0 { if(GetCvar("TB_SequentialShot")) {
				A_GiveInventory("ShotsWereFired",1);
			}
		}
		"####" I 0 A_PlaySound("Fleshrend/Out",6,0.6)
		"####" AA 0 A_FireCustomMissile("FleshyCasingSpawnerReversed",0,0,-1,2,FPF_NOAUTOAIM)
		"####" A 0 { If(CountInv("RendUpgrade")) {
			A_FireCustomMissile("FleshyCasingSpawnerReversed",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" A 0 { If(CountInv("TricorneShot")) {
			A_FireCustomMissile("FleshyCasingSpawnerReversed",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" KL 1
		"####" O 0 A_PlaySound("Fleshrend/In",6,0.5)
		"####" MNO 1
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" QRST 1
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,4)
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" B 2
		"####" B 0 A_TakeInventory("ShotsWereFired",1)
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK),"LFire")
		Goto LIdle
	LGunflash:
		TNT1 A 4 A_Light2
		TNT1 A 5 A_Light1
		TNT1 A 0 A_Light0
		Stop
	LNope:
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDT A 0
		"####" A 0 A_PlaySound("Fleshrend/Dry",4,0.8)
		"####" DEF 1
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" B 8
		Goto LIdle
	

	RIdle:
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 1
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "CaberToss")
		"####" A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return State("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return State("RFire"); }
			Return State("");
		}
		Loop
	RFire:
		//"####" A 0 A_JumpIfInventory("RendUpgrade",1,"RUpgFire")
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",2,"RMain")
		Goto RNope
		"####" A 0 A_JumpIfInventory("BlueMana",4,"RMain")
		Goto RNope
	/*RUpgFire:
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("ShellsAmmo",3,2)
		Goto RNope
		"####" A 0 A_JumpIfInventory("BlueMana",6,1)
		Goto RNope
		"####" A 0 A_TakeInventory("ShellsAmmo",1)
		"####" A 0 A_TakeInventory("BlueMana",2)*/
	RMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",1);
			A_FireCustomMissile("GunsmokeSpawner_Medium",0,0,14,0,FPF_NOAUTOAIM);
			A_Overlay(3,"RGunflash");
			A_AlertMonsters;
			A_Recoil(2.0);
			A_FireBullets(8.0, 2.0, 16, 5, "BulletPuff");
			If(CountInv("RendUpgrade")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("TricorneShot")) {
				A_FireBullets(8.0, 2.0, 8, 5, "BulletPuff",0);
			}
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDF A 0
		"####" A 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_Light1
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDY A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" BC 1
		"####" C 0 A_Light0
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" EFG 1
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,2)
		"####" I 1
		"####" A 0 A_PlaySound("Fleshrend/Out",4,0.6)
		"####" AA 0 A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM)
		"####" A 0 { If(CountInv("RendUpgrade")) {
			A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" A 0 { If(CountInv("TricorneShot")) {
			A_FireCustomMissile("FleshyCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM);
			}
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") > 0 || CountInv("BlazingBooster"),2)
		"####" KL 1
		"####" A 0 A_PlaySound("Fleshrend/In",4,0.5)
		"####" MNO 1 
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing") > 0,2)
		"####" QRST 1
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing") > 0,4)
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 2
		"####" A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return State("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return State("RFire"); }
			Return State("");
		}
		Goto RIdle
	RGunflash:
		TNT1 A 4 A_Light2
		TNT1 A 5 A_Light1
		TNT1 A 0 A_Light0
		Stop
	RNope:
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDT A 0
		"####" A 0 A_PlaySound("Fleshrend/Dry",4,0.8)
		"####" ABC 1
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2)
		RNDG A 0
		"####" A 8
		Goto RIdle
	Spawn:
		RNDG X -1
		Stop
	}
}