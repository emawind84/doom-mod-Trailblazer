Actor PattySelected : Inventory { Inventory.MaxAmount 1 }
Actor PattyUpgrade : Inventory { Inventory.MaxAmount 1 }

Actor PatriarchClip : Ammo
{
	Inventory.MaxAmount 12
	Inventory.Icon PTRGX0
	+IGNORESKILL
}

ACTOR PatriarchToggler : CustomInventory
{
	Inventory.Amount 1
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 1
	Inventory.PickupMessage "You shouldn't drop this in the first place, dummy."
	Inventory.Icon "ARTIPTRG"
	+INVENTORY.INVBAR
	+INVENTORY.UNDROPPABLE
	Tag "Homing Grenades Toggle"
	States
	{
	Spawn:
		PTRG A -1
		Stop
	Use:
		"####" A 0 A_PlaySound("Tinker/Tink",4,0.7)
		TNT1 A 0 A_JumpIfInventory("HomingGrenades",1,"DeUse")
		"####" A 0 A_Print("\c[white]Homing Grenades\n\c[green]Engaged.",2)
		"####" A 0 A_GiveInventory("HomingGrenades",1)
		Fail
	DeUse:
		"####" A 0 A_Print("\c[white]Homing Grenades\n\c[red]Disengaged.",2)
		"####" A 0 A_TakeInventory("HomingGrenades",1)
		Fail
	}
}

Actor Patriarch : Weapon
{
	Weapon.AmmoUse 1
	Weapon.AmmoUse2 0
	Weapon.AmmoGive 0
	Weapon.AmmoGive2 12
	Weapon.AmmoType "PatriarchClip"
	Weapon.AmmoType2 "GrenadeAmmo"
	Weapon.SlotNumber 5
	Weapon.SelectionOrder 5
	Weapon.UpSound "Patriarch/Up"
	Weapon.Kickback 150
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Obtained a ''Patriarch'' type 87 grenade launcher! Bless yourself! (5)"
	Obituary "%o was shown who's %p's daddy, thanks to %k's ''Patriarch''."
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 1.6
	Weapon.BobRangeY 0.5
	Weapon.BobRangeX 0.9
	+AMMO_CHECKBOTH
	+NOALERT
	States
	{
	Ready:
		PTUU A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRU A 0
		"####" ABCD 1
	ReadyMain:
		PTUG A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRG A 0
		"####" A 0 A_JumpIfInventory("MacheteGoesFast",1,"CaberToss")
		"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM)
		Loop
	Deselect:
		"####" A 0 { 
			A_TakeInventory("PattySelected");
			A_TakeInventory("PowerCrafterTimer");
			A_ZoomFactor(1.0);
		}
		PTUU A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRU A 0
		"####" DCBA 1
		TNT1 A 0 SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH)
		TNT1 AAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		Wait
	Select:
		TNT1 A 0 A_GiveInventory("PattySelected")
		TNT1 A 0 SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH)
	HonkaCzongka:
		TNT1 A 0 A_Raise
		TNT1 A 1 A_Raise
		Loop
	Fire:
		"####" A 0 A_JumpIfInventory("PatriarchClip",1,1)
		Goto DryFire
		"####" A 0
		{
			If (A_JumpIf(CountInv("PattyUpgrade") > 0, "Null"))
			{
				A_FireCustomMissile("PatriarchProjectile2",0,1,6,0,0);
				A_PlaySound("Patriarch/Cannon",5);
				A_Recoil(0.5);
			}
			Else
			{
				A_FireCustomMissile("PatriarchProjectile",frandom(0.7,-0.7),1,6,0,0,frandom(0.35,-0.35));
				A_Recoil(2.0);
			}
		}
	FireAnim:
		PTUF A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRF A 0
		"####" A 0 {
			A_PlaySound("Patriarch/Fire",1,0.7);
			A_PlaySound("Patriarch/Add",5,0.7);
			A_FireCustomMissile("GunsmokeSpawner_Medium2",0,0,4,5,FPF_NOAUTOAIM);
			A_AlertMonsters;
			A_GunFlash;
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
				A_SetBlend("Blue",0.15,15);
			}
		}
		"####" A 1 Bright {
			If(CountInv("PattyUpgrade"))
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
				A_SetPitch(pitch-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
			Else
			{ 
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
				A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
		}
		
		"####" B 1 Bright {
			If(CountInv("PattyUpgrade"))
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.97); }
				A_SetPitch(pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
			Else
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
				A_SetPitch(pitch-1.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
		}
		
		PTUT A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRT A 0
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" A 1 {
			If(CountInv("PattyUpgrade"))
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
				A_SetPitch(pitch-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
			Else
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
				A_SetPitch(pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
		}
		
		"####" B 1 {
			If(CountInv("PattyUpgrade"))
			{ 
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
				A_SetPitch(pitch-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
			Else
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.995); }
				A_SetPitch(pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
		}
		
		"####" C 1 {
			A_ZoomFactor(1.0);
			If(CountInv("PattyUpgrade"))
			{
				A_SetPitch(pitch-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
			Else
			{
				if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(1.0); }
				A_SetPitch(pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			}
		}
		"####" C 0 A_FireCustomMissile("GrenadeCasingSpawner",0,0,-1,2,FPF_NOAUTOAIM)
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" EF 1
		
		PTUG A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRG A 0
		"####" A 2 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" A 0 A_ReFire
		Goto ReadyMain
	AltFire:
		"####" A 0 A_JumpIfInventory("PatriarchClip",1,1)
		Goto DryFire
		"####" A 0
		{
			If (A_JumpIf(CountInv("PattyUpgrade") > 0, "Null"))
			{
				A_FireCustomMissile("PatriarchBounceProjectile2",0,0,6,0,0);
				A_TakeInventory("PatriarchClip", 1, TIF_NOTAKEINFINITE);
				A_PlaySound("Patriarch/Cannon",5);
				A_Recoil(0.5);
				Return;
			}
			Else
			{
				A_FireCustomMissile("PatriarchBounceProjectile",frandom(0.7,-0.7),0,6,0,0,0.01*frandom(0.35,-0.35));
				A_TakeInventory("PatriarchClip", 1, TIF_NOTAKEINFINITE);
				A_Recoil(2.0);
				Return;
			}
		}
		Goto FireAnim
	DryFire:
		"####" A 0 A_JumpIf(GetCvar("TB_ReloadMode"), "AutoReload")
		PTUD A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRD A 0
		"####" A 0 A_PlaySound("Patriarch/Dry",4,0.9)
		"####" ABCDCBA 1
		PTUG A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRG A 0
		"####" A 5
		Goto ReadyMain
	AutoReload:
		"####" A 0 A_JumpIfInventory("GrenadeAmmo",1,"Reload")
		Goto DryFire+1
	DriedToBoot:
		"####" A 0 A_GiveInventory("DryToken",1)
		Goto ReloadMainie
	Reload:
		"####" A 0 A_JumpIfInventory("PatriarchClip",0,"ReadyMain")
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("GrenadeAmmo",1,2)
		Goto ReadyMain
		"####" A 0 A_JumpIfInventory("GreenMana",10,1)
		Goto ReadyMain
	ReloadMain:
		"####" A 0 A_JumpIfInventory("PatriarchClip",1,1)
		Goto DriedToBoot
	ReloadMainie:
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" BC 1
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" EF 1
		"####" G 2
		
		PTUO A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRO A 0
		"####" A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" BC 1
		"####" D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" EF 1 
		"####" G 0 A_PlaySound("Patriarch/Out",6)
		"####" G 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" HIJ 1
		"####" K 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" LM 1
		"####" N 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" N 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" N 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" N 5 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM)
		
		PTUI A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRI A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" BCD 1
		"####" E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" FG 1
		"####" G 0 A_PlaySound("Patriarch/In",6)
		"####" H 1
		"####" I 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" JK 1
		
		"####" Z 0 A_JumpIfInventory("PattyUpgrade",1,3)
		"####" Z 0 A_SpawnItemEx("PatriarchClipDrop",0,0,20)
		"####" Z 0 A_Jump(256,2)
		"####" Z 0 A_SpawnItemEx("PatriarchClipDrop2",0,0,20)
		
		"####" Z 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" Z 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" Z 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" Z 5 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM)
		"####" L 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" M 1
		"####" N 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" O 1
		"####" P 0 A_PlaySound("Patriarch/In2",6)
		"####" P 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" Q 1
		"####" R 1
	ReloadWorking:
		"####" A 0 A_JumpIfInventory("HexenCounter",1,"HexenReloadWorking")
		"####" A 0 A_TakeInventory("GrenadeAmmo",1,TIF_NOTAKEINFINITE)
		"####" A 0 A_GiveInventory("PatriarchClip",1)
		"####" A 0 A_JumpIfInventory("PatriarchClip",0,"ReloadFinish")
		"####" A 0 A_JumpIfInventory("GrenadeAmmo",1,"ReloadWorking")
		Goto ReloadFinish
	HexenReloadWorking:
		"####" A 0 A_TakeInventory("GreenMana",10,TIF_NOTAKEINFINITE)
		"####" A 0 A_GiveInventory("PatriarchClip",1)
		"####" A 0 A_JumpIfInventory("PatriarchClip",0,"ReloadFinish")
		"####" A 0 A_JumpIfInventory("GreenMana",10,"HexenReloadWorking")
	ReloadFinish:
		PTUO A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRO A 0
		"####" F 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" F 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" F 1
		"####" F 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		"####" E 1
		"####" D 1
		"####" C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" B 1
		"####" A 1
		
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" F 1
		"####" E 1
		"####" D 1
		"####" C 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" B 1
		"####" A 1
		"####" A 0 A_JumpIfInventory("DryToken",1,"Kaczink")
		Goto ReadyMain
	Kaczink:
		PTUP A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRP A 0
		"####" A 0 A_TakeInventory("DryToken",1)
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" BCD 1
		"####" E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" FGH 1
		"####" I 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" J 1
		"####" A 0 A_PlaySound("Patriarch/Pull1",5,0.9)
		"####" KL 1
		"####" M 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" NOP 1
		"####" Q 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" R 1
		"####" T 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" U 1
		
		PTUG A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRG A 0
		"####" A 1
		Goto ReadyMain
	Flash:
		TNT1 A 6 A_Light1
		TNT1 A 8 A_Light2
		TNT1 A 0 A_Light0
		Stop
	Zoom:
		"####" A 0 A_JumpIfInventory("ZoomReFire",1,"PunchDescendants")
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" ACDG 1 // Thanks Pillow! These frames are helpful!
					   // Pillow: Yur welcum
		"####" A 0 A_GiveInventory("ZoomReFire",1)
	PunchDescendants:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		QML1 A 0 A_Overlay(2,"PunchFlash")
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2)
		QML1 A 0 A_Jump(256,3)
		FML1 A 0 A_SetBlend("Orange",0.05,10)
		FML1 A 0 A_PlaySound("Melee/Firepunch",5)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIfInventory("KineticFist",1,"KineticPunch")
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 100)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150,0.06)
		Goto PunchContinue
	KineticPunch:
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 300)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker2", 350,0.06)
		Goto PunchContinue
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" I 1
		"####" J 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" K 1
		TNT1 A 5
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchDescendants")
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" FDCA 1
		"####" A 0 A_TakeInventory("ZoomReFire",1)
		Goto ReadyMain
	PunchFlash:
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" G 1 A_PlaySound("Punch/Swing",6,1.0)
		PTUM A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRM A 0
		"####" ABC 1
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" BA 1
		PTUH A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRH A 0
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" GG 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" GG 1
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2)
		"####" GG 1
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		"####" GG 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		"####" GG 1
		Stop
	CaberToss:
		"####" A 1 A_JumpIfInventory("MacheteAmmo",1,1)
		Goto ReadyMain
		PTUU A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRU A 0
		"####" DCBA 1
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		TNT1 A 1
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",1,0.9);
				A_PlaySound("Machete2/Slash",5,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		MCHT ABC 1
		TNT1 A 0 A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_JumpIfInventory("PowerStrength2",1,3)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		TNT1 A 0 A_Jump(256,2)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		// This solution is ten times better. Just let it bouncecount out.
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1)
		MCHT E 1
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		MCHT G 1
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		MCHT I 1
		TNT1 A 3
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "CaberMain")

		PTUU A 0 A_JumpIfInventory("PattyUpgrade",1,2)
		PTRU A 0
		"####" ABCD 1
		Goto ReadyMain
	Spawn:
		PTRG X -1
		Stop
	}
}

Actor PatriarchProjectile
{
	Radius 10
	Height 7
	Speed 40
	Damage 20
	Projectile
	-NOGRAVITY
	+FORCERADIUSDMG
	+SEEKERMISSILE
	+USEBOUNCESTATE
	Gravity 0.25
	Obituary "%o was shown who's %p daddy, thanks to %k's ''Patriarch''."
	Scale 0.75
	Decal "BFGScorch"
	DamageType "Patriarch"
	Var Int User_Patriarch_Flight;
	Var Int User_Patriarch_Homing;
	States
	{
	Spawn:
		PATG B 0 NoDelay {
			A_ChangeVelocity(0, 0, 2.75, CVF_RELATIVE);
			A_SetUserVar("User_Patriarch_Flight",10);
			If(CountInv("HomingGrenades",AAPTR_TARGET)) {
				A_SetUserVar("User_Patriarch_Homing",1);
				Return State("Looplo");
			}
			Return State("");
		}
		PATG A 0
	Looplo:
		"####" "#" 1 { If(User_Patriarch_Flight > 0) {
			A_SpawnItemEx("Patriarch_Trail",
				frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0),
				frandom(1.5, -2.5), frandom(-1.0, 1.0), frandom(-1.0, 1.0),
				0, SXF_CLIENTSIDE, 10);
			}
		}
		"####" "#" 0 A_SetUserVar("User_Patriarch_Flight", User_Patriarch_Flight - 1)
		Loop
	Bounce:
		"####" "#" 0 { If(User_Patriarch_Homing) {
				A_SeekerMissile(70,70,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,2);
			}
		}
		Goto Looplo
	Death:
		TNT1 A 0 {
			if(A_JumpIf(CountInv("MasterExploder", AAPTR_TARGET) > 0, "Null"))
			{
				A_SetDamageType("MasteringExplosions");
			}
			A_NoGravity();
			A_PlaySound("Explosion/Init",5,0.8);
			A_PlaySound("Explosion/Main",6,0.8);
			A_PlaySound("Explosion/Layer",4,0.8);
			A_PlaySound("Explosion/Flavor",7,0.8);
			A_SpawnItemEx("Patriarch_Main",0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			A_Explode(175,148);
		}
		TNT1 A 28 A_QuakeEx(3,3,3,12,0,512,"none",QF_SCALEDOWN)
		Stop
	}
}

Actor PatriarchBounceProjectile : PatriarchProjectile
{
	BounceType "Doom"
	BounceCount 3
	BounceSound "Patriarch/Bounce"
	+CANBOUNCEWATER
}

Actor PatriarchProjectile2 : PatriarchProjectile
{
	Damage 25
	Speed 70
	States
	{
	Spawn:
		PATG B 0 NoDelay {
			A_ChangeVelocity(0, 0, 2.0, CVF_RELATIVE);
			A_SetUserVar("User_Patriarch_Flight",10);
			If(CountInv("HomingGrenades",AAPTR_TARGET)) {
				A_SetUserVar("User_Patriarch_Homing",1);
				Return State("Looplo");
			}
			Return State("");
		}
		PATG A 0
		Goto Super::Looplo
	}
}

Actor PatriarchBounceProjectile2 : PatriarchProjectile
{
	Damage 25
	Speed 70
	BounceType "Doom"
	BounceCount 3
	BounceSound "Patriarch/Bounce"
	+CANBOUNCEWATER
	States
	{
	Spawn:
		PATG B 0 NoDelay {
			A_ChangeVelocity(0, 0, 2.0, CVF_RELATIVE);
			A_SetUserVar("User_Patriarch_Flight",10);
			If(CountInv("HomingGrenades",AAPTR_TARGET)) {
				A_SetUserVar("User_Patriarch_Homing",1);
				Return State("Looplo");
			}
			Return State("");
		}
		PATG A 0
		Goto Super::Looplo
	}
}

/*

KeksDose's patented (not really) SFX-building method, hijacked by his best buddy (fucking traitor), PillowBlaster.
Use with cause.

*/

Actor KD_BaseParticle
{
	+NoInteraction
	+ForceXYBillboard
	RenderStyle Normal
	Alpha 0.99
	States
	{
		Spawn:				// Initialization goes here.
			TNT1 A 0
			Goto FadeIn
		FadeIn:				// Optional fading in.
			TNT1 A 0
			Goto Idle
		Idle:				// Fly around.
			TNT1 A 0
			Goto FadeOut
		FadeOut:			// Dissipate.
			TNT1 A 0
			Stop
	}
}

Actor KD_BaseParticleMultiple : KD_BaseParticle
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD")
			Goto Spawn
		SpriteA:
			TNT1 A 0 A_Jump(256, "FadeIn")
		SpriteB:
			TNT1 A 0 A_Jump(256, "FadeIn")
		SpriteC:
			TNT1 A 0 A_Jump(256, "FadeIn")
		SpriteD:
			TNT1 A 0 A_Jump(256, "FadeIn")
		FadeIn:				// Optional fading in.
			TNT1 A 0
			Goto Idle
		Idle:				// Fly around.
			TNT1 A 0
			Goto FadeOut
		FadeOut:			// Dissipate.
			TNT1 A 0
			Stop
	}
}

Actor KD_BaseEmitter
{
	Var Int User_SpawnCount;
	
	+NoInteraction
	
	States
	{
		Spawn:				// Initialize particle counter.
			TNT1 AA 0 A_SetUserVar("User_SpawnCount", 10)
			Goto Emit
		Emit:				// Emit particles.
			TNT1 A 0 A_Jump(0xFF, "Count") // You MUST use A_Jump.
			Goto Count
		Count:				// Emit until SpawnCount <= 0.
			TNT1 A 0 A_SetUserVar("User_SpawnCount", User_SpawnCount - 1)
			TNT1 A 0 A_JumpIf(User_SpawnCount <= 0, "NULL")
			TNT1 A 0 A_Jump(0xFF, "Emit")
			Goto Emit
	}
}

Actor Patriarch_Cloud : KD_BaseParticleMultiple
{
	Alpha 0.65
	RenderStyle Add
	States
	{
		Spawn:
			TNT1 AA 0 A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD",
								 "SpriteE", "SpriteF", "SpriteG", "SpriteH")
		SpriteA:
			CLOD A 0 A_Jump(256, "FadeIn")
			Goto SpriteA
		SpriteB:
			CLOD B 0 A_Jump(256, "FadeIn")
			Goto SpriteB
		SpriteC:
			CLOD C 0 A_Jump(256, "FadeIn")
			Goto SpriteC
		SpriteD:
			CLOD D 0 A_Jump(256, "FadeIn")
			Goto SpriteD
		SpriteE:
			CLOD E 0 A_Jump(256, "FadeIn")
			Goto SpriteE
		SpriteF:
			CLOD F 0 A_Jump(256, "FadeIn")
			Goto SpriteF
		SpriteG:
			CLOD G 0 A_Jump(256, "FadeIn")
			Goto SpriteG
		SpriteH:
			CLOD H 0 A_Jump(256, "FadeIn")
			Goto SpriteH
		FadeIn:
			"####" "#" 0 Bright A_SetScale(FRandom(1.0, 0.9))
			Goto Idle
		Idle:
			"####" "#" 2 Bright A_Jump(190, "FadeOut")
			Loop
		FadeOut:
			"####" "#" 1 Bright A_FadeOut(0.035)
			"####" "#" 0 A_ScaleVelocity(FRandom(1.01, 1.03))
			"####" "#" 0 A_SetScale(ScaleX - FRandom(0.01, 0.03))
			Loop
	}
}

Actor Patriarch_Smoke : KD_BaseParticleMultiple
{
	Alpha 0.0
	RenderStyle Translucent
	States
	{
		Spawn:
		    TNT1 A 3
			TNT1 A 0 A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD")
		SpriteA:
			DYMI A 0 A_Jump(256, "FadeIn")
			Goto SpriteA
		SpriteB:
			DYMI B 0 A_Jump(256, "FadeIn")
			Goto SpriteB
		SpriteC:
			DYMI C 0 A_Jump(256, "FadeIn")
			Goto SpriteC
		SpriteD:
			DYMI D 0 A_Jump(256, "FadeIn")
			Goto SpriteD
		FadeIn:
			"####" "#" 0 A_SetScale(FRandom(0.3, 0.4))
			Goto RealFadeIn
		RealFadeIn:
			"####" "#" 1 A_FadeIn(FRandom(0.01, 0.03))
			"####" "#" 0 A_JumpIf(Alpha >= 0.35, "Idle")
			Loop
		Idle:
			"####" "#" 5 A_Jump(200, "FadeOut")
			Loop
		FadeOut:
			"####" "#" 1 A_FadeOut(FRandom(0.01,0.015))
			"####" "#" 0 A_ScaleVelocity(0.96)
			"####" "#" 0 A_SetScale(ScaleX + FRandom(0.015, 0.025))
			Loop
	}
}

Actor Patriarch_Ember : KD_BaseParticleMultiple
{
	Alpha 0.99
	RenderStyle Add
	States
	{
		Spawn:
			TNT1 AA 0 A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD", "SpriteE", "SpriteF")
		SpriteA:
			EMBR A 0 A_Jump(256, "FadeIn")
			Goto SpriteA
		SpriteB:
			EMBR B 0 A_Jump(256, "FadeIn")
			Goto SpriteB
		SpriteC:
			EMBR C 0 A_Jump(256, "FadeIn")
			Goto SpriteC
		SpriteD:
			EMBR D 0 A_Jump(256, "FadeIn")
			Goto SpriteD
		SpriteE:
			EMBR E 0 A_Jump(256, "FadeIn")
			Goto SpriteE
		SpriteF:
			EMBR F 0 A_Jump(256, "FadeIn")
			Goto SpriteF
		FadeIn:
			"####" "#" 0 Bright A_SetScale(FRandom(0.035, 0.055))
			Goto Idle
		Idle:
			"####" "#" 2 Bright A_Jump(200, "FadeOut")
			Loop
		FadeOut:
			"####" "#" 1 Bright A_Weave(FRandom(0.9, 1.0), FRandom(0.9, 1.0),
										FRandom(70, 90), FRandom(70, 90))
			"####" "#" 0 A_JumpIf(ScaleX <= 0.0, "NULL")
			"####" "#" 0 A_ChangeVelocity(VelX * FRandom(0.93, 0.99),
										  VelY * FRandom(0.93, 0.99),
										  VelZ - FRandom(0.1, 0.2),
										  CVF_REPLACE)
			"####" "#" 0 A_SetScale(ScaleX - FRandom(0.003, 0.0015))
			Loop
	}
}

Actor Patriarch_Shockwave : KD_BaseParticle
{
	RenderStyle Add
	Scale 0.2
	States
	{
		Spawn:
			SHCK A 0
			SHCK A 0 A_SetScale(ScaleX + FRandom(0.15, 0.2))
			SHCK A 1 Bright A_FadeOut(0.1)
			Loop
	}
}

Actor Patriarch_Flare : KD_BaseParticle
{
	RenderStyle Add
	Scale 2.2
	States
	{
		Spawn:
			FLER A 1 Bright A_FadeOut(0.04)
			FLER A 0 A_SetScale(ScaleX - FRandom(0.05, 0.15))
			FLER A 0 A_JumpIf(ScaleX <= 0.0, "NULL")
			Loop
	}
}

Actor Patriarch_Blast : KD_BaseParticle
{
	RenderStyle Add
	Scale 0.4
	Alpha 0.7
	States
	{
		Spawn:
			TNT1 AA 0 A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD",
								 "SpriteE", "SpriteF", "SpriteG", "SpriteH")
		SpriteA:
			BLAS A 0 A_Jump(256, "FadeIn")
			Goto SpriteA
		SpriteB:
			BLAS B 0 A_Jump(256, "FadeIn")
			Goto SpriteB
		SpriteC:
			BLAS C 0 A_Jump(256, "FadeIn")
			Goto SpriteC
		SpriteD:
			BLAS D 0 A_Jump(256, "FadeIn")
			Goto SpriteD
		SpriteE:
			BLAS E 0 A_Jump(256, "FadeIn")
			Goto SpriteE
		SpriteF:
			BLAS F 0 A_Jump(256, "FadeIn")
			Goto SpriteF
		SpriteG:
			BLAS G 0 A_Jump(256, "FadeIn")
			Goto SpriteG
		SpriteH:
			BLAS H 0 A_Jump(256, "FadeIn")
			Goto SpriteH
		FadeIn:
			"####" "#" 1 Bright A_FadeOut(0.05)
			"####" "#" 0 A_SetScale(ScaleX + FRandom(0.075, 0.1))
			Loop
	}
}

Actor Patriarch_Impact : KD_BaseEmitter
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetUserVar("User_SpawnCount", 17)
			Goto Emit
		Emit:
			TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==2, 4)			
		    TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==1, 2)	
			TNT1 AAAA 0 A_SpawnItemEx("Patriarch_Cloud", FRandom(-25, 25),
									FRandom(-25, 25), FRandom(-25, 25),
									FRandom(-2.0, -2.0), FRandom(-2.0, 2.0),
									FRandom(-2.0, 2.0), FRandom(0.0,360.0), SXF_CLIENTSIDE, 64)
			TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==2, 3)			
		    TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==1, 2)		
			TNT1 AA 0 A_SpawnItemEx("Patriarch_Smoke", FRandom(-25, 25),
									FRandom(-25, 25), FRandom(-25, 25),
									FRandom(2.0, -1.0), FRandom(-0.9, 0.9),
									FRandom(-0.9, 0.9), FRandom(0.0,360.0), SXF_CLIENTSIDE, 64)
			TNT1 AA 0 A_SpawnItemEx("Patriarch_Ember", FRandom(-20, 20),
									FRandom(-20, 20), FRandom(-20, 20),
									FRandom(-2.0, -8.0), FRandom(-6.0, 6.0),
									FRandom(1.0, 5.0), FRandom(0.0,360.0), SXF_CLIENTSIDE, 24)
			/*TNT1 AA 0 A_SpawnItemEx("Patriarch_Flare", FRandom(-20, 20),
									FRandom(-20, 20), FRandom(-20, 20),
									0, 0, 0, 0, SXF_CLIENTSIDE)*/
			TNT1 A 1
			TNT1 A 0 A_Jump(0xFF, "Count")
			Goto Count
	}
}

Actor Patriarch_Main : KD_BaseParticle
{
	States
	{
	Spawn:
	TNT1 A 0 NoDelay A_SpawnItemEx("Patriarch_Impact")
	TNT1 A 0 A_SpawnItemEx("Patriarch_Blast")
	TNT1 A 0 A_SpawnItemEx("Patriarch_Flare")
	TNT1 A 0 A_SpawnItemEx("Patriarch_Shockwave")
	Stop
	}
}

Actor Patriarch_Smoke2 : Patriarch_Smoke
{
	States
	{
		Spawn:
		    TNT1 A 3
			TNT1 AA 0 A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD")
		SpriteA:
			DYMI E 0 A_Jump(256, "FadeIn")
			Goto SpriteA
		SpriteB:
			DYMI F 0 A_Jump(256, "FadeIn")
			Goto SpriteB
		SpriteC:
			DYMI G 0 A_Jump(256, "FadeIn")
			Goto SpriteC
		SpriteD:
			DYMI H 0 A_Jump(256, "FadeIn")
			Goto SpriteD
	}
}

Actor Patriarch_Trail : Patriarch_Smoke2
{
	States
	{
		FadeIn:
			"####" "#" 0 A_SetScale(FRandom(0.2, 0.3))
			Goto RealFadeIn
		RealFadeIn:
			"####" "#" 1 A_FadeIn(FRandom(0.02, 0.05))
			"####" "#" 0 A_SetScale(ScaleX + FRandom(0.01,0.02))
			"####" "#" 0 A_JumpIf(Alpha >= 0.2, "Idle")
			Loop
		Idle:
			"####" "#" 5 A_Jump(200, "FadeOut")
			Loop
		FadeOut:
			"####" "#" 1 A_FadeOut(FRandom(0.03,0.04))
			"####" "#" 0 A_ScaleVelocity(0.96)
			"####" "#" 0 A_SetScale(ScaleX + FRandom(0.015, 0.025))
			Loop
	}
}