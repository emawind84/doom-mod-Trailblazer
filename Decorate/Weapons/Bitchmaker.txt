Actor BitchSelected : Inventory { Inventory.MaxAmount 1 }
Actor BitchUpgrade : Inventory { Inventory.MaxAmount 1 }

Actor MagnumClip : Ammo
{
	Inventory.MaxAmount 6
	Inventory.Icon BITGX0
	+IGNORESKILL
}

Actor Bitchmaker : Weapon
{
	Weapon.AmmoUse 1
	Weapon.AmmoGive 0
	Weapon.AmmoType "MagnumClip"
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 6
	Weapon.AmmoType2 "HellraiserAmmo"
	Weapon.SlotNumber 5
	Weapon.SelectionOrder 4
	Weapon.UpSound "Magnum/Up"
	Weapon.Kickback 200
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "Sticked your palms to ''Bitchmaker'' magnum! Does it look like a bitch? (5)"
	Obituary "%o wasn't a lucky punk. %h went ahead, and made %k's day."
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 1.2
	Weapon.BobRangeY 0.5
	Weapon.BobRangeX 1.1
	+NOALERT
	+AMMO_CHECKBOTH
	+NOAUTOFIRE
	+NOAUTOAIM
	Scale 0.8
	States
	{
	Ready:
		BUTU A 0 A_JumpIfInventory("BitchUpgrade",1,2) //Ahahaha.
		BITU A 0
		"####" ABCD 1
	ReadyMain:
		BUTG A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITG A 0
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "CaberToss")
		"####" A 0 A_JumpIfInventory("MagnumClip",1,2)
		"####" B 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD)
		Goto ReadyMain
		"####" A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD)
		Loop
	Deselect:
		"####" A 0 A_TakeInventory("BitchSelected")
		"####" A 0 A_TakeInventory("PowerCrafterTimer")
		BUTU A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITU A 0
		"####" DCBA 1
		TNT1 A 0 A_StopSound(1)
		TNT1 A 0 SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH)
		TNT1 AAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		Wait
	Select:
		"####" A 0 A_GiveInventory("BitchSelected")
		TNT1 A 0 SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH)
		TNT1 A 0 A_Raise
		TNT1 A 1 A_Raise
		Loop
	HammerCheck:
		"####" A 0 A_JumpIfInventory("MagnumClip",1,2)
		"####" A 0 A_JumpIf(GetCvar("TB_ReloadMode"),"AutoReload")
		Goto ReadyMain
	Hammer:
		BUTH A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITH A 0
		"####" A 0 A_PlaySound("Magnum/Hammer2",4,0.8)
		"####" A 1 { A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD); A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1); }
		"####" B 1	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		"####" C 1	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		"####" D 1 { A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD); A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 1); }
		"####" E 1	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		"####" F 1	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		"####" G 1 { A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD); A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 1); }
		"####" H 1	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		BUTG A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITG A 0
		"####" A 3	 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_NOBOB|WRF_ALLOWRELOAD)
		"####" A 0 A_ReFire
		Goto ReadyMain
	AutoReload:
		"####" A 0 A_JumpIfInventory("HellraiserAmmo",1,"Reload")
		Goto ReadyMain
	Fire:
		"####" A 0 { If(CountInv("MagnumClip")) { Return State(""); } Else { Return State("HammerCheck"); }}
		"####" A 0 A_JumpIf(CountInv("BitchUpgrade"), "UpgFire")
		//Since recoil changes are extensive here, might as well make separate firing cases.
		BITG A 0 {
			A_PlaySound("Magnum/Fire",1,0.8);
			A_Recoil(8.0);
			A_AlertMonsters;
			A_GunFlash;
			A_FireCustomMissile("GunsmokeSpawner_Medium_Dark",0,0,7,6,FPF_NOAUTOAIM);
			if(GetCvar("TB_QuakeRecoil")) { A_QuakeEx(1,1,1,4,0,16,"none",QF_SCALEDOWN); }
			if(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.15,15);
			}
			if(CountInv("KeepShooting") && random(1,4) == 1) {
				A_FireCustomMissile("MagnumProjectile",0,0,7,7);
				A_SetBlend("Orange",0.15,15);
				ACS_NamedExecuteAlways("Bitching Shot");
			} else {
				A_FireCustomMissile("MagnumProjectile",0,1,7,7);
			}
		}	
		BITF A 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetAngle(Angle-1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITF B 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.9); }
			A_SetAngle(Angle-2 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-2 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		BITF C 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.925); }
			A_SetAngle(Angle-1.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITF D 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetAngle(Angle-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		BITF E 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetAngle(Angle-1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITF F 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE); 
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		BITF G 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITF H 1 { if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(1.0); } }
		BITF I 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		BITF JKL 1
		BITF M 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		BITF NOP 1
		BITF Q 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		BITF RS 1
		Goto HammerCheck
		
	UpgFire:
		BUTG A 0 {
			A_PlaySound("Magnum/Fire",1,0.8);
			A_Recoil(4.0);
			A_AlertMonsters;
			A_GunFlash;
			A_FireCustomMissile("GunsmokeSpawner_Medium_Dark",0,0,7,6,FPF_NOAUTOAIM);
			A_QuakeEx(1,1,1,4,0,16,"none",QF_SCALEDOWN);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.15,15);
			}
			If(CountInv("KeepShooting") && random(1,4) == 1) {
				A_FireCustomMissile("MagnumProjectile2",0,0,7,7);
				A_SetBlend("Orange",0.15,15);
				ACS_NamedExecuteAlways("Bitching Shot");
			} Else {
				A_FireCustomMissile("MagnumProjectile2",0,1,7,7);
			}
		}
		BUTF A 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetAngle(Angle-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE) ;
		}
		BUTF B 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.9); }
			A_SetAngle(Angle-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		BUTF C 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.925); }
			A_SetAngle(Angle-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF D 1 { 
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetAngle(Angle-0.75 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.75 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		BUTF E 1 { 
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetAngle(Angle-0.625 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.625 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF F 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		BUTF G 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTF H 1 { if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(1.0); } }
		BUTF I 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		BUTF JKL 1
		BUTF M 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		BUTF NOP 1
		BUTF Q 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		BUTF RS 1
		Goto HammerCheck
	AltDryFire:
		"####" A 0
		Goto ReadyMain
	AltFire:
		"####" A 0 { If(CountInv("MagnumClip")) { Return State(""); } Else { Return State("AltDryFire"); }}
		"####" A 0 A_PlaySound("Magnum/Hammer2",4,0.8)
		BUTH A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITH A 0
		"####" H 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" G 1
		"####" F 1
		"####" E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" D 1
		"####" C 1
		"####" B 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" A 1
		BUTG B 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITG B 0
		"####" B 1
		BUTA A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITA A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" BCD 1
		"####" E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 3)
		"####" FGHI 1
		"####" J 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 3)
		"####" KLMN 1
	AltLoop:
		BI2F A 0 A_JumpIfInventory("BitchUpgrade",1,"UpgAltLoop")
		BI2F A 0 A_JumpIfInventory("MagnumClip",1,5)
		BI2F A 0 A_JumpIfInventory("KeepShooting",1,1)
		Goto Lolnope
		BI2F A 0 A_JumpIfInventory("HexenCounter",1,2)
		BI2F A 0 A_JumpIfInventory("HellraiserAmmo",1,2)
		Goto Lolnope
		BI2F A 0 A_JumpIfInventory("GreenMana",12,1)
		Goto Lolnope
		BI2F AB 1
		BI2F B 0 {
			A_PlaySound("Magnum/Fire",1,0.8);
			A_Recoil(4.0);
			A_AlertMonsters;
		}
		BI2F B 0 A_JumpIfInventory("MagnumClip",1,2)
		BI2F B 0 A_JumpIfInventory("KeepShooting",1,"AltReserve") //The setup for actual keep shooting.
		
		BI2F B 0 A_JumpIfInventory("KeepShooting",1,2) //The setup for a 25% chance of ammo conservation.
		BI2F B 0 A_Jump(256,2)
		BI2F B 0 A_Jump(64,"AltContinueSave")
		BI2F B 0 A_TakeInventory("MagnumClip",1,TIF_NOTAKEINFINITE)
		Goto AltContinue
	AltReserve:
		BI2F B 0 A_JumpIfInventory("HexenCounter",1,2)
		BI2F B 0 A_JumpIfInventory("HellraiserAmmo",1,2)
		Goto Lolnope
		BI2F B 0 A_JumpIfInventory("GreenMana",12,1)
		Goto Lolnope
		BI2F B 0 A_Jump(64,"AltContinueSave")
		BI2F B 0 A_JumpIfInventory("HexenCounter",1,3)
		BI2F B 0 A_TakeInventory("HellraiserAmmo",1,TIF_NOTAKEINFINITE)
		BI2F B 0 A_Jump(256,"AltContinue")
		BI2F B 0 A_TakeInventory("GreenMana",12,TIF_NOTAKEINFINITE)
		Goto AltContinue
	AltContinueSave:
		BI2F B 0 {
			A_SetBlend("Orange",0.15,15);
			ACS_NamedExecuteAlways("Bitching Shot");
		}
	AltContinue:
		BI2F B 0 {
			A_GunFlash;
			A_FireCustomMissile("GunsmokeSpawner_Medium_Dark",0,0,7,6,FPF_NOAUTOAIM);
			A_FireCustomMissile("MagnumProjectile",frandom(-5.0,5.0),0,7,7,FPF_NOAUTOAIM,frandom(-5.0,5.0));
			if(GetCvar("TB_QuakeRecoil")) { A_QuakeEx(1,1,1,4,0,16,"none",QF_SCALEDOWN); }
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.15,15);
			}
		}
		BI2F C 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.975); }
			A_SetAngle(Angle-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BI2F D 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetAngle(Angle-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		BI2F E 1 {
			if(GetCvar("TB_ZoomRecoil")) {  A_ZoomFactor(0.97); }
			A_SetAngle(Angle-0.75 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.75 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BI2F F 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetAngle(Angle-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		BI2F G 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetAngle(Angle-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BI2F H 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(1.0); }
			A_SetAngle(Angle-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BITG A 0 A_ReFire("AltLoop")
		Goto TheBacketh
	UpgAltLoop:
		BU2F A 0 A_JumpIfInventory("MagnumClip",1,3)
		BU2F A 0 A_JumpIfInventory("KeepShooting",1,1)
		Goto Lolnope
		BU2F A 0 A_JumpIfInventory("HellraiserAmmo",1,1)
		Goto Lolnope
		BU2F AB 1
		BU2F B 0 {
			A_PlaySound("Magnum/Fire",1,0.8);
			A_Recoil(2.0);
			A_AlertMonsters;
		}
		BU2F B 0 A_JumpIfInventory("MagnumClip",1,2) //The setup for actual keep shooting.
		BU2F B 0 A_JumpIfInventory("KeepShooting",1,"UpgAltReserve")
		
		BU2F B 0 A_JumpIfInventory("KeepShooting",1,2) //The setup for a 25% chance of ammo conservation.
		BU2F B 0 A_Jump(256,2)
		BU2F B 0 A_Jump(64,"UpgAltContinueSave")
		BU2F B 0 A_TakeInventory("MagnumClip",1,TIF_NOTAKEINFINITE)
		Goto UpgAltContinue
	UpgAltReserve:
		BU2F B 0 A_JumpIfInventory("HexenCounter",1,2)
		BU2F B 0 A_JumpIfInventory("HellraiserAmmo",1,2)
		Goto Lolnope
		BU2F B 0 A_JumpIfInventory("GreenMana",12,1)
		Goto Lolnope
		BU2F B 0 A_Jump(64,"UpgAltContinueSave")
		BU2F B 0 A_JumpIfInventory("HexenCounter",1,3)
		BU2F B 0 A_TakeInventory("HellraiserAmmo",1,TIF_NOTAKEINFINITE)
		BU2F B 0 A_Jump(256,"UpgAltContinue")
		BU2F B 0 A_TakeInventory("GreenMana",12,TIF_NOTAKEINFINITE)
		Goto UpgAltContinue
	UpgAltContinueSave:
		BI2F B 0 {
			A_SetBlend("Orange",0.15,15);
			ACS_NamedExecuteAlways("Bitching Shot");
		}
	UpgAltContinue:
		BU2F B 0 {
			A_GunFlash;
			A_FireCustomMissile("GunsmokeSpawner_Medium_Dark",0,0,7,6,FPF_NOAUTOAIM);
			A_FireCustomMissile("MagnumProjectile2",frandom(-2.0,2.0),0,7,7,FPF_NOAUTOAIM,frandom(-2.0,2.0));
			if(GetCvar("TB_QuakeRecoil")) { A_QuakeEx(1,1,1,4,0,16,"none",QF_SCALEDOWN); }
			if(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 5);
				A_SetBlend("Blue",0.15,15);
			}
		}
		BU2F C 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.975); }
			A_SetAngle(Angle-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BU2F D 1 Bright {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetAngle(Angle-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BU2F A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2)
		BU2F E 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetAngle(Angle-0.375 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.375 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BU2F F 1 {
			if(GetCvar("TB_ZoomRecoil")) {  A_ZoomFactor(0.98); }
			A_SetAngle(Angle-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BU2F A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2)
		BU2F G 1 {
			if(GetCvar("TB_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetAngle(Angle-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.125 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BU2F H 1 {
			if(GetCvar("TB_ZoomRecoil")) {  A_ZoomFactor(1.0); }
			A_SetAngle(Angle-0.0625 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.625 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		BUTG A 0 A_ReFire("UpgAltLoop")
	TheBacketh:
		BUTA A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITA A 0
		"####" N 35 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" MLK 35
		"####" J 35 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 3)
		"####" IHGF 35
		"####" E 35 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 3)
		"####" DCBA 35
		Goto HammerCheck
	Lolnope:
		BU2F A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BI2F A 0
		"####" AB 1
		"####" A 0 A_PlaySound("Magnum/Hammer2",4,0.8)
		"####" IJ 1
		"####" J 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" EF 1
		"####" G 0 A_PlaySound("Magnum/Hammer1",6,0.3)
		"####" J 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" GH 1
		"####" A 0 A_ReFire("Lolnope")
		Goto TheBacketh
	Flash:
		TNT1 A 4 A_Light2
		TNT1 A 7 A_Light1
		TNT1 A 0 A_Light0
		Stop
	Reload:
		"####" A 0 A_JumpIfInventory("MagnumClip",0,"ReadyMain")
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2)
		"####" A 0 A_JumpIfInventory("HellraiserAmmo",1,2)
		Goto ReadyMain
		"####" A 0 A_JumpIfInventory("GreenMana",12,1)
		Goto ReadyMain
	ReloadMain:
		BUTO A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITO A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		"####" B 1
		"####" C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" D 1
		"####" E 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" F 1
		"####" F 0 A_PlaySound("Magnum/Open",5,0.75)
		"####" GH 1
		"####" IJ 1 A_FireCustomMissile("BuellerCasingSpawner2",0,0,1,2)
		"####" KKKK 1 A_FireCustomMissile("BuellerCasingSpawner2",0,0,1,2)
		"####" A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		"####" A 0 A_Jump(256,3)
		"####" AA 0 A_FireCustomMissile("BuellerCasingSpawner2",0,0,1,2)
		"####" A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM)
		"####" K 2 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		"####" K 2 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" K 2 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" K 2
		
		BUTL A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITL A 0
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		"####" B 1
		"####" A 0 A_PlaySound("Magnum/Load",5)
		"####" C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1)
		"####" D 1
		"####" E 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1)
		"####" FG 1
		"####" A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM)
	ReloadWorking:
		"####" A 0 A_JumpIfInventory("HexenCounter",1,"HexenReloadWorking")
		"####" A 0 A_TakeInventory("HellraiserAmmo",1,TIF_NOTAKEINFINITE)
		"####" A 0 A_GiveInventory("MagnumClip", 1)
		"####" A 0 A_JumpIfInventory("MagnumClip",0,2)
		"####" A 0 A_JumpIfInventory("HellraiserAmmo",1,2)
		"####" A 0
		Goto ReloadFinish
		"####" A 0
		Goto ReloadWorking
	HexenReloadWorking:
		"####" A 0 A_TakeInventory("GreenMana",12,TIF_NOTAKEINFINITE)
		"####" A 0 A_GiveInventory("MagnumClip", 1)
		"####" A 0 A_JumpIfInventory("MagnumClip",0,2)
		"####" A 0 A_JumpIfInventory("GreenMana",12,2)
		"####" A 0
		Goto ReloadFinish
		"####" A 0
		Goto HexenReloadWorking
	ReloadFinish:
		"####" HIJKL 1
		"####" M 2 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		"####" M 2 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 1)
		"####" M 2 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 1)
		"####" M 0 A_PlaySound("Magnum/Close",5)
		"####" N 1
		"####" O 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" P 1
		"####" Q 1
		"####" R 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" S 1
		"####" T 1
		"####" V 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" W 1
		BUTG A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITG A 0
		"####" B 2
		Goto Hammer
	Zoom:
		BU2X A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BI2X A 0
		"####" A 0 A_JumpIfInventory("ZoomReFire",1,"PunchHoes")
		"####" A 0 A_JumpIfInventory("MagnumClip",1,"LoadedEnter")
		"####" ABCD 1
	EnterMain:
		"####" A 0 A_GiveInventory("ZoomReFire",1)
		Goto PunchHoes
	LoadedEnter:
		BUTX A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITX A 0
		"####" ABCD 1
		Goto EnterMain
	PunchHoes:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		QML1 A 0 A_Overlay(2,"PunchFlash")
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2)
		QML1 A 0 A_Jump(256,3)
		FML1 A 0 A_SetBlend("Orange",0.05,10)
		FML1 A 0 A_PlaySound("Melee/Firepunch",5)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		
		"####" A 0 A_JumpIfInventory("KineticFist",1,"KineticPunch")
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 100)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150,0.06)
		Goto PunchContinue
	KineticPunch:
		"####" A 0 A_JumpIfInventory("PowerStrength2",1,3)
		"####" A 0 A_CustomPunch(30, 1, 0, "PunchCracker", 300)
		"####" A 0 A_Jump(256,"PunchContinue")
		"####" A 0 A_CustomPunch(90, 1, 0, "FlamePunchCracker2", 350,0.06)
		Goto PunchContinue
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE)
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" I 1
		"####" J 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" K 1
		TNT1 A 5
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH|WRF_ALLOWZOOM)
		TNT1 A 1 //Had to add an extra tic here, else punch looping won't work. Why? Don't ask me, ask JumpIfInventory and WeaponReady being next to each other.
		TNT1 A 0 A_JumpIfInventory("MagnumClip",1,"LoadedReturn")
		BU2X A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BI2X A 0
		"####" DCBA 1
	ReturnMain:
		"####" A 0 A_TakeInventory("ZoomReFire",1)
		Goto ReadyMain
	LoadedReturn:
		BUTX A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITX A 0
		"####" DCBA 1
		Goto ReturnMain
	PunchFlash:
		"####" A 0 A_JumpIfInventory("BitchUpgrade",1,4)
		BITP A 0 A_JumpIfInventory("MagnumClip",1,2)
		BI2P A 0
		"####" A 0 A_Jump(256,3)
		BUTP A 0 A_JumpIfInventory("MagnumClip",1,2)
		BU2P A 0
		"####" G 1 A_PlaySound("Punch/Swing",6,1.0)
		"####" ABC 1
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" DE 1
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" FE 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" DC 1
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 2)
		"####" BA 1
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 2)
		"####" GG 1
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 2)
		"####" GGG 1
		Stop
	CaberToss:
		"####" A 0 A_JumpIfInventory("MacheteAmmo",1,1)
		Goto ReadyMain
		BUTU A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITU A 0
		"####" DCBA 1
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 1)
		TNT1 A 1
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 1)
		TNT1 A 1
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",1,0.9);
				A_PlaySound("Machete2/Slash",5,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		MCHT ABC 1
		TNT1 A 0 A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE)
		TNT1 A 0 A_JumpIfInventory("PowerStrength2",1,3)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		TNT1 A 0 A_Jump(256,2)
		MCHT A 0 {
			if(A_JumpIf(CountInv("PowerAmmoJunkie") > 0, "Null")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			} Else {
				A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			}
		}
		//This solution is ten times better. Just let it bouncecount out.
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster") > 0, 1)
		MCHT E 1
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"), 1)
		MCHT G 1
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"), 1)
		MCHT I 1
		TNT1 A 3
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") > 0 && CountInv("MacheteAmmo") > 0, "CaberMain")
	CaberReturn:
		BUTU A 0 A_JumpIfInventory("BitchUpgrade",1,2)
		BITU A 0
		"####" ABCD 1
		Goto ReadyMain
	Spawn:
		BITG X -1
		Stop
	}
}

Actor MagnumProjectile : FastProjectile
{
	Radius 10
	Height 14
	Speed 250
	Damage 80
	Projectile
	Obituary "%o wasn't a lucky punk. %h went ahead, and made %k's day."
	MissileType "MagnumTrail"
	MissileHeight 8
	DamageType "Fire"
	Decal "Scorch"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_PlaySound("Magnum/Fly",5,0.8,1)
		TNT1 A 1 A_ChangeVelocity(0, 0, -0.3, CVF_RELATIVE)
		Loop
	Death:
		TNT1 A 0 A_SpawnItemEx("MagnumImpact",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0)
		TNT1 A 0 A_Explode(100,128,0)
		TNT1 A 0 A_PlaySound("Magnum/Explode",5,0.7)
		TNT1 A 1 A_PlaySound("Magnum/Hit",4)
		Stop
	}
}

Actor MagnumProjectile2 : MagnumProjectile
{
	Speed 300
	Damage 100
}

Actor MagnumTrail
{
	+NOINTERACTION
	+NOGRAVITY
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SpawnItemEx("Chrome_Fire",random(2,-2),random(2,-2),random(2,-2),frandom(0.3,0.2),frandom(0.3,0.2),frandom(0.3,0.2),frandom(0.0,360.0),SXF_CLIENTSIDE)
		TNT1 A 0 A_SpawnItemEx("Chrome_Smoke",random(2,-2),random(2,-2),random(2,-2),frandom(0.1,0.2),frandom(0.1,0.2),frandom(0.1,0.2),frandom(0.0,360.0),SXF_CLIENTSIDE)
		TNT1 A 0 A_SpawnItemEx("MagnumTrail1",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
		TNT1 A 1 A_SpawnItemEx("MagnumTrail2",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
		Stop
	}
}

Actor MagnumTrail1
{
	+NOINTERACTION
	+NOGRAVITY
	Renderstyle Add
	Alpha 1
	Scale 0.25
	States
	{
	Spawn:
		BPRP A 1 Bright
		BPRP A 0 A_SetScale(ScaleX+0.2)
		BPRP A 1 Bright A_FadeOut(0.2)
		BPRP A 0 A_SetScale(ScaleX+0.2)
		BPRP A 1 Bright A_FadeOut(0.2)
		BPRP A 0 A_SetScale(ScaleX-0.2)
		BPRP A 1 Bright A_FadeOut(0.2)
		BPRP A 0 A_SetScale(ScaleX-0.2)
		BPRP A 1 Bright A_FadeOut(0.2)
		Stop
	}
}

Actor MagnumTrail2
{
	+NOINTERACTION
	+NOGRAVITY
	Renderstyle Add
	Alpha 1
	Scale 0.15
	States
	{
	Spawn:
		BPRR A 1 Bright
		BPRR A 0 A_SetScale(ScaleX+0.1)
		BPRR A 1 Bright A_FadeOut(0.2)
		BPRR A 0 A_SetScale(ScaleX+0.1)
		BPRR A 1 Bright A_FadeOut(0.2)
		BPRR A 0 A_SetScale(ScaleX-0.1)
		BPRR A 1 Bright A_FadeOut(0.2)
		BPRR A 0 A_SetScale(ScaleX-0.1)
		BPRR A 1 Bright A_FadeOut(0.2)
		Loop
	}
}

Actor MagnumImpact
{
	+NOINTERACTION
	+NOGRAVITY
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(GetCvar("TB_SmokeReduction")==2, 8)
		TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==1, 4)	
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("Patriarch_Cloud", FRandom(-15, 15),
									FRandom(-15, 15), FRandom(-15, 15),
									FRandom(-2.0, -2.0), FRandom(-2.0, 2.0),
									FRandom(-2.0, 2.0), 0, SXF_CLIENTSIDE, 10)
		TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==2, 8)
		TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==1, 4)	
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("Patriarch_Smoke", FRandom(-15, 15),
									FRandom(-15, 15), FRandom(-15, 15),
									FRandom(1.5, -2.5), FRandom(-1.0, 1.0),
									FRandom(-1.0, 1.0), 0, SXF_CLIENTSIDE, 10)
		TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==2, 8)
		TNT1 A 0 A_JumpIf(GetCvar("TB_SmokeReduction")==1, 4)	
		TNT1 AAAAAAAAA 0 A_SpawnItemEx("Patriarch_Ember", FRandom(-10, 10),
									FRandom(-10, 10), FRandom(-10, 10),
									FRandom(-2.0, -8.0), FRandom(-6.0, 6.0),
									FRandom(1.0, 5.0), 0, SXF_CLIENTSIDE, 10)
		TNT1 A 0 A_SpawnItemEx("MagnumImpact1",0,0,0,0,0,0,0,SXF_CLIENTSIDE)
		TNT1 A 11
		Stop
	}
}

Actor MagnumImpact1
{
	+NOINTERACTION
	+NOGRAVITY
	Renderstyle Add
	Alpha 1
	Scale 0.35
	States
	{
	Spawn:
		BPRH ABCDEFGHIJ 1 Bright A_FadeOut(0.05)
		Stop
	}
}