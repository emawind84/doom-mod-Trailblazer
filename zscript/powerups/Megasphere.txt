class MegasphereItem : Megasphere
{
	Default
	{
		Inventory.PickupMessage "$GOTMEGASPHERE";
		Inventory.PickupSound "Megasphere/Pickup";
		Renderstyle 'Add';
		+FLOATBOB
	}
	
	Int User_Count;
	
	States
	{
	Spawn:
		TBMS AAAABBBBCCCCDDDDEEEEFFFFEEEEDDDDCCCCBBBB 1 Bright {
			If(!(A_CheckSight("Null") || GetCVar("TB_ParticleReduction")))
			{
				If(Invoker.User_Count % 4 == 0)
				{
					A_SpawnItemEx("MegaFade",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
					Invoker.User_Count = 0;
				}
				Invoker.User_Count = Invoker.User_Count + 1;
				A_SpawnItemEx("MegasphereParticle",
				frandom(10.0,-10.0),frandom(10.0,-10.0),35+frandom(10.0,-10.0),
				frandom(0.6,-0.6),frandom(0.6,-0.6),frandom(1.2,0.4),
				frandom(0.0,360.0),SXF_CLIENTSIDE,64);
			}
		}
		Loop;
		
	Pickup:
		TNT1 A 0 {
			//Alchemist's Dream storing.
			if(CountInv("AlchemistsDream") &&
			  (CountInv("MegaspherePortable") < 3) &&
			   GetPlayerInput(INPUT_BUTTONS) & BT_USE)
			{
				A_Print("$MEGASPHERESTORED");
				A_GiveInventory("MegaspherePortable",1);
				Return ResolveState("Null");
			}
			//Blazing Booster bonus.
			If(CountInv("BlazingBooster")) {
				A_GiveInventory("NicotineToken",5);
			}
			//Alchemist's Potency bonus.
			If(CountInv("AlchemistsPotency")) {
				A_GiveInventory("MegasphereBoost");
			}
			//Stuff.
			A_SpawnItemEx("CigbuttHail",0,0,0,0,0,0,0,SXF_CLIENTSIDE);
			A_SpawnItemEx("MegasphereEffect",0,0,0,0,0,0,0,SXF_SETTARGET);
			A_GiveInventory("MegasphereArmor2",1);
			A_GiveInventory("MegasphereHealth2",1);
			A_GiveInventory("NicotineToken",15);
			
			//Nicotine Rush.
			If(CountInv("NicotineToken") >= 100) {
				A_TakeInventory("NicotineToken",100);
				A_GiveInventory("NicotineRushItem");
			}
			Return ResolveState(null);
		}	
		Stop;
	}
}

class CigbuttHail : Actor
{
	Default
	{
		+NOINTERACTION
	}
	
	Int ButtCount; //Oh right. I don't need user_ anymore. HAHAHAHA~
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
		for (ButtCount = 0; ButtCount < 20; ButtCount = ButtCount + 1)
			{
				A_SpawnItemEx("Cigbutt",
				frandom(5.0,-5.0),frandom(5.0,-5.0),20+frandom(5.0,-5.0),
				frandom(1.0,5.0),0,frandom(2.0,6.0),
				frandom(0.0,360.0),SXF_CLIENTSIDE,48);
			}
		}
		Stop;
	}
}

class MegasphereArmor2 : BlueArmor {}

class MegasphereHealth2 : MegasphereHealth
{
	Default
	{
		Inventory.MaxAmount 999;
	}
}

//Potency upgrade
class MegasphereBoost : MegasphereHealth2
{
	Default
	{
		Inventory.Amount 25;
	}
}

//Stored powerup
class MegaspherePortable : TBPowerupPortableBase
{
	Default
	{
		Inventory.PickupMessage "$GOTMEGASPHERE";
		Inventory.Icon 'ARTITBMS';
		Inventory.PickupSound "Megasphere/Pickup";
		Tag "Cigsphere";
	}
	
	States
	{
	Spawn:
		TBMS AAAABBBBCCCCDDDDEEEEFFFFEEEEDDDDCCCCBBBB 1 Bright {
			If(!(A_CheckSight("Null") || GetCVar("TB_ParticleReduction")))
			{
				If(Invoker.User_Count % 4 == 0)
				{
					A_SpawnItemEx("MegaFade",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
					Invoker.User_Count = 0;
				}
				Invoker.User_Count = Invoker.User_Count + 1;
				A_SpawnItemEx("MegasphereParticle",
				frandom(10.0,-10.0),frandom(10.0,-10.0),35+frandom(10.0,-10.0),
				frandom(0.6,-0.6),frandom(0.6,-0.6),frandom(1.2,0.4),
				frandom(0.0,360.0),SXF_CLIENTSIDE,64);
			}
		}
		Loop;
	
	Use:
		TNT1 A 0 {
			//Blazing Booster bonus.
			If(CountInv("BlazingBooster")) {
				A_GiveInventory("NicotineToken",5);
			}
			//Stuff.
			A_PlaySound("Megasphere/Pickup",CHAN_AUTO);
			A_SpawnItemEx("CigbuttHail",0,0,0,0,0,0,0,SXF_CLIENTSIDE);
			A_SpawnItemEx("MegasphereEffect",0,0,0,0,0,0,0,SXF_SETTARGET);
			A_GiveInventory("MegasphereArmor2",1);
			A_GiveInventory("MegasphereHealth2",1);
			A_GiveInventory("NicotineToken",15);
			
			//Nicotine Rush.
			If(CountInv("NicotineToken") >= 100) {
				A_SetBlend("bfa78f",0.3,70);
				A_TakeInventory("NicotineToken",100);
				A_GiveInventory("NicotineRushItem");
			}
			//Alchemist's Potency bonus.
			If(CountInv("AlchemistsPotency")) {
				A_GiveInventory("MegasphereBoost");
			}
		}
		Stop;
	} 
}

//Eyecandy
class MegaFade : TBFadeBase
{
	States
	{
	Spawn:
		TBMS C 0;
		Goto Super::Fade;
	}
}

class MegasphereParticle : TBItemParticle
{
	States
	{
	Spawn:
		KPRT A 0;
	SetScale:
		"####" "#" 0 A_SetScale(0.1);
	Main:
		"####" "#" 1 Bright {
			A_SetScale(Scale.X-frandom(-0.01,0.02));
			A_FadeOut(frandom(0.02,0.04));
			A_ChangeVelocity(0,0,frandom(-0.1,0.15),CVF_RELATIVE);
			Return A_JumpIf(Scale.X <= 0,"Null");
		}
		Loop;
	}
}

class MegasphereEffect : TBPowerupEffect
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for (User_Counter = 0; User_Counter < 6; User_Counter = User_Counter + 1)
			{
				A_SetAngle(frandom(0.0,360.0));
				A_SpawnItemEx("MegaspherePart",0,0,0,0,0,0,0,SXF_CLIENTSIDE|SXF_TRANSFERPOINTERS);
			}
			User_Counter = 40;
		}
		Goto Super::Loop2;
	}
}

class MegaspherePart : TBPowerupPart
{
	States
	{
	Spawn:
		PSHK A 0;
		Goto Super::Setup;
	}
}