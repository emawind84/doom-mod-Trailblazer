/*
CRUDUTS:

Sprites:
Weapon - DoomNukem, Gabbuz, Xatrix aaand obviously me

Sounds:
People Can Fly (Bulletstorm)
Wolfenstein 2009 (Raven Software)
*/

class DeuceSelected : Inventory { Default { Inventory.MaxAmount 1; } }
class DeuceUpgrade : Inventory  { Default { Inventory.MaxAmount 1; } }

class DoubleDeuceClip : Ammo
{
	Default
	{
		Inventory.MaxAmount 2;
		Inventory.Icon "DEUGX0";
		+INVENTORY.IGNORESKILL
	}
}

class DoubleDeucePickup : CustomInventory
{
	Default
	{
		Inventory.PickupSound "misc/w_pkup";
		//Inventory.PickupMessage "Obtained a really damn stylish ''Fleshrend'' sawed-off! Peeling off the skins - multiple enemies at a time! (3)";
	}
	
	States
	{
	Spawn:
		DEUG X -1;
		Stop;
	Pickup:
		TNT1 A 0 {
			if (FindInventory("DoubleDeuce") == NULL) A_GiveInventory("DoubleDeuce");
			//else A_GiveInventory("DoubleDeuce2");
		}
		Stop;
	}
}

//class DoubleDeuce2 : DoubleDeuce {}

class DoubleDeuce : Weapon
{
	Default
	{
		Health 3;
		Weapon.AmmoUse 1;
		Weapon.AmmoType "DoubleDeuceClip";
		Weapon.AmmoGive 0;
		Weapon.AmmoUse2 0;
		Weapon.AmmoType2 "TwoBoreAmmo";
		Weapon.AmmoGive2 4;
		Weapon.SlotNumber 7;
		Weapon.SelectionOrder 3;
		Weapon.UpSound "DoubleDeuce/Up";
		Weapon.Kickback 90;
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Lifted above your head the ''Double Deuce'' super coach gun! Time to clear entire lakes of ducks. And other wildlife. (7)";
		Obituary "%k's powerful insult went right through everything that %o ever stood for.";
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 1.4;
		Weapon.BobRangeY 0.5;
		Weapon.BobRangeX 1.2;
		+WEAPON.AMMO_CHECKBOTH
		+WEAPON.NOALERT
		+WEAPON.NOAUTOAIM
		+WEAPON.NOAUTOFIRE
	}
	
	//Hexen handling.
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoUse1 = 60;
			AmmoGive1 = 120;
			AmmoType1 = "BlueMana";
			AmmoUse2 = 120;
			AmmoGive2 = 120;
			AmmoType2 = "GreenMana";
			bPRIMARY_USES_BOTH = 1;
			bALT_USES_BOTH = 1;
		}
		Super.AttachToOwner(user);
	}

	States
	{
	Ready:
		DE2O A 0 A_JumpIfInventory("DoubleDeuceClip",2,3);
		DE1O A 0 A_JumpIfInventory("DoubleDeuceClip",1,2);
		DE0O A 0;
		"####" JBA 1;
		DEUG A 1;
	ReadyMain:
		DEUG A 0 A_JumpIfInventory("MacheteGoesFast",1,"CaberToss");
		DEUG A 1 A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		TNT1 A 0 {
			A_TakeInventory("DeuceSelected");
			A_TakeInventory("PowerCrafterTimer");
		}
		DEUL ABCD 1;
		TNT1 A 0 A_StopSound(1);
		TNT1 A 0 SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
		TNT1 A 1 A_Lower(18);
		Wait;
	Select:
		TNT1 A 0 A_GiveInventory("DeuceSelected");
		TNT1 A 0 SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
	HonkaCzongka:
		TNT1 A 1 A_Raise(12);
		Loop;
	Fire:
		DEUG A 0 A_JumpIf(CountInv("DoubleDeuceClip"), 1);
		Goto DryFire;
		DEUF A 0 Bright A_JumpIf(CountInv("DoubleDeuceClip") >= 2, 2);
		DEUF B 0 Bright;
		"####" "#" 1 Bright {
			A_TakeInventory("DoubleDeuceClip",1);
			A_PlaySound("DoubleDeuce/Fire",1);
			A_PlaySound("Nutcracker/Fire",5,0.4);
			if(GetCvar("TB_SmokeReduction") < 2) {
			For(int Smokescreen = 0; Smokescreen < 10; Smokescreen++) {
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,CountInv("DoubleDeuceClip") > 1 ? 6 : 13,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
			}
			}
			if(GetCvar("TB_SmokeReduction") < 1) {
			For(int Smokescreen = 0; Smokescreen < 10; Smokescreen++) {
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,CountInv("DoubleDeuceClip") > 1 ? 6 : 13,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
			}
			}
			A_ChangeVelocity (Cos(Pitch) * -39, 0, Sin(Pitch) * 39, CVF_RELATIVE);
			A_Recoil(20.0);
			A_AlertMonsters();
			A_GunFlash();
			for(int Gunjuice = 0; Gunjuice < 70; Gunjuice++) {
				A_FireProjectile("DoubleDeuceProjectile",frandom(-20.0,20.0),0,CountInv("DoubleDeuceClip") > 1 ? 6 : 13,-5,FPF_NOAUTOAIM,frandom(-6.0,6.0));
			}
			A_SetBlend("Yellow",0.2,12);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 0);
				A_SetBlend("Blue",0.2,35);
			}
			A_QuakeEx(6,6,6,14,0,16,"none",QF_SCALEDOWN);
			A_QuakeEx(6,6,6,14,0,20,"none",QF_SCALEDOWN|QF_WAVE,2.0,2.0,5.0);
			A_SetAngle(Angle-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		Goto ItsTheNutshack;
	AltFire:
		DEUG A 0 A_JumpIf(CountInv("DoubleDeuceClip") >= 2, 1);
		Goto DryFire;
		DEUF C 1 Bright {
			A_TakeInventory("DoubleDeuceClip",2);
			A_PlaySound("DoubleDeuce/Fire",6);
			A_PlaySound("DoubleDeuce/FireTwo",1);
			A_PlaySound("Nutcracker/Fire",5,0.8);
			if(GetCvar("TB_SmokeReduction") < 2) {
			For(int Smokescreen = 0; Smokescreen < 10; Smokescreen++) {
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,6,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,13,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
			}
			}
			if(GetCvar("TB_SmokeReduction") < 1) {
			For(int Smokescreen = 0; Smokescreen < 10; Smokescreen++) {
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,6,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
				A_FireProjectile("Gunsmoke_Large_Dark",frandom(-15.0,15.0),0,13,-5,FPF_NOAUTOAIM,frandom(-10.0,10.0));
			}
			}
			A_ChangeVelocity (Cos(Pitch) * -54, 0, Sin(Pitch) * 54, CVF_RELATIVE);
			A_Recoil(25.0);
			A_AlertMonsters();
			A_GunFlash();
			for(int Gunjuice = 0; Gunjuice < 70; Gunjuice++) {
				A_FireProjectile("DoubleDeuceProjectile",frandom(-20.0,20.0),0,6,-5,FPF_NOAUTOAIM,frandom(-6.0,6.0));
				A_FireProjectile("DoubleDeuceProjectile",frandom(-20.0,20.0),0,13,-5,FPF_NOAUTOAIM,frandom(-6.0,6.0));
			}
			A_SetBlend("Yellow",0.2,16);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 0);
				A_SetBlend("Blue",0.2,35);
			}
			A_QuakeEx(8,8,8,25,0,16,"none",QF_SCALEDOWN);
			A_QuakeEx(8,8,8,25,0,20,"none",QF_SCALEDOWN|QF_WAVE,2.0,2.0,5.0);
			A_SetAngle(Angle-8.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-8.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		Goto ItsTheNutshack;
	DryFire:
		DEUG A 0 A_JumpIf(GetCvar("TB_ReloadMode"),"AutoReload");
		DEUG A 0 A_PlaySound("ChromeJustice/Dry",6,0.7);
		DEUG A 1 A_WeaponOffset(1,33);
		DEUG A 1 A_WeaponOffset(3,35);
		DEUG A 1 A_WeaponOffset(2,34);
		DEUG A 1 A_WeaponOffset(1,33);
		DEUG A 1 A_WeaponOffset(0,32);
		DEUG A 3;
		Goto ReadyMain;
	AutoReload:
		DEUG A 0 A_JumpIf(((CountInv("DoomCounter") || CountInv("HereticCounter")) && CountInv("TwoBoreAmmo")) ||
			   (CountInv("HexenCounter") && CountInv("BlueMana") >= 60 && CountInv("GreenMana") >= 60),"Reload");
		Goto DryFire+1;
	ItsTheNutshack:
		DEUF D 1 {
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.9); }
			A_SetAngle(Angle-4.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-4.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		DEUF E 1 {
			If(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster")) { Return A_Jump(256,1); }
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.8); }
			A_SetAngle(Angle-3.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-3.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			Return ResolveState(Null);
		}
		DEUF G 1 {
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.85); }
			A_SetAngle(Angle-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		DEUF H 1 {
			If(Health <= 50 || CountInv("PowerBlazing")) { Return A_Jump(256,1); }
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.875); }
			A_SetAngle(Angle-2.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-2.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			Return ResolveState(Null);
		}
		DEUF I 1 {
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.9); }
			A_SetAngle(Angle-1.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		DEUF J 1 {
			If(Health <= 25 || CountInv("PowerBlazing")) { Return A_Jump(256,1); }
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.925); }
			A_SetAngle(Angle-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-1.0 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			Return ResolveState(Null);
		}
		DEUF K 1 {
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.95); }
			A_SetAngle(Angle-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		}
		DEUF L 1 {
			If(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster")) { Return A_Jump(256,1); }
			if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.96); }
			A_SetAngle(Angle-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			A_SetPitch(Pitch-0.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
			Return ResolveState(Null);
		}
		DEUF M 1 { if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.97); } }
		DEUF N 1 { if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.98); } }
		DEUF O 1 { if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(0.99); } }
		DEUF P 1 { if(GetCvar("TB_ZoomFactor")) { A_ZoomFactor(1.0); } }
		DEUF Q 1;
		DEUF R 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEUF S 1;
		DEUF T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEUF U 1;
		DEUF V 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		DEUF W 1;
		DEUF X 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEUF Y 1;
		DEUF Z 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEUF "[" 1;
		DEUF "]" 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),"ReadyMain");
		Goto ReadyMain;
	Reload:
		DEUG A 0 A_JumpIfInventory("DoubleDeuceClip",0,"ReadyMain");
		DEUG A 0 {
			if(CountInv("HexenCounter") && CountInv("BlueMana") >= 60 && CountInv("GreenMana") >= 60) {
				Return ResolveState(Null);
			} else if((CountInv("DoomCounter") || CountInv("HereticCounter")) && CountInv("TwoBoreAmmo"))  {
				Return ResolveState(Null);
			}
			Return ResolveState("ReadyMain");
		}
		DEUO A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEUO B 1;
		DEUO C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEUO D 1;
		
		DEUO D 0 {
			A_PlaySound("DoubleDeuce/Open",6,0.8);
			A_QuakeEx(2,2,2,12,0,10,"none",QF_SCALEDOWN|QF_WAVE,1.0,1.0,-5.0);
		}
		DE1O A 0 A_JumpIf(CountInv("DoubleDeuceClip"),2);
		DE0O A 0;
		"####" AB 1;
		"####" C 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" DE 1;
		"####" F 1  A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" GH 1;
		"####" I 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" JK 1;
		"####" L 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" MN 1;
		"####" O 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" P 1;
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		"####" A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM);
		
		DE1L A 0 A_JumpIf(CountInv("DoubleDeuceClip") || CountInv("TwoBoreAmmo") <= 1,2);
		DE2L A 0;
		"####" A 1;
		"####" B 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" C 1;
		"####" D 1  A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" E 1;
		"####" F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" G 1;
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" I 1;
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" K 1;
		TNT1 A 1 {
			A_PlaySound("DoubleDeuce/Load",6,0.8);
			A_QuakeEx(2,2,2,12,0,10,"none",QF_SCALEDOWN|QF_WAVE,1.0,1.0,5.0);
		}
		TNT1 A 0 A_JumpIf(CountInv("HexenCounter"),"HexenLoad");
		Goto StandardLoad;
	HexenLoad:
		TNT1 A 0 A_JumpIfInventory("DoubleDeuceClip",0,"EndThis");
		TNT1 A 0 A_JumpIf(CountInv("BlueMana") >= 60 && CountInv("GreenMana") >= 60,1);
		Goto EndThis;
		TNT1 A 0 {
				A_TakeInventory("BlueMana",60,TIF_NOTAKEINFINITE);
				A_TakeInventory("GreenMana",60,TIF_NOTAKEINFINITE);
				A_GiveInventory("DoubleDeuceClip",1);
		}
		Loop;
	StandardLoad:
		TNT1 A 0 A_JumpIfInventory("DoubleDeuceClip",0,"EndThis");
		TNT1 A 0 A_JumpIf(CountInv("TwoBoreAmmo"),1);
		Goto EndThis;
		TNT1 A 0 {
				A_TakeInventory("TwoBoreAmmo",1,TIF_NOTAKEINFINITE);
				A_GiveInventory("DoubleDeuceClip",1);
		}
		Loop;
	EndThis:
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 2;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 4;
		"####" A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB|WRF_ALLOWZOOM);
		
		DEHG A 1;
		DEHG B 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEHG CD 1;
		DEHG E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEHG FG 1;
		DEHG H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		DEHG IJ 1;
		DEHG K 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEHG LM 1;
		
		TNT1 A 2;
		
		DE2O A 0 A_JumpIf(CountInv("DoubleDeuceClip") > 1,2);
		DE1O A 0;
		"####" PO 1;
		"####" N 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" ML 1;
		"####" K 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" J 0 {
			A_PlaySound("DoubleDeuce/Close",6,0.8);
			A_QuakeEx(2,2,2,12,0,10,"none",QF_SCALEDOWN|QF_WAVE,1.0,1.0,-5.0);
		}
		"####" JBA 1;
		DEUG A 1;
		DEUC A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEUC BC 1;
		DEUC D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEUC EF 1;
		DEUC G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		DEUG A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		DEUG A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		DEUG A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),"ReadyMain");
		Goto ReadyMain;
	Flash:
		TNT1 A 5 A_Light2();
		TNT1 A 6 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	Zoom:
		DEUL ABCD 1;
	PunchHoes:
		QML1 A 0 {
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
			A_PlaySound("Punch/Swing",6,1.0);
			Return A_JumpIf(!CountInv("PowerStrength2"),2);
		}
		FML1 A 0 {
			A_SetBlend("Orange",0.05,10);
			A_PlaySound("Melee/Firepunch",5);
		}
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchHoes");
		DEUL DCBA 1;
		Goto ReadyMain;
	PunchFlash:
		NTFG D 0 A_JumpIfInventory("NutterUpgrade",1,2);
		NTCG D 0;
		"####" D 1 A_PlaySound("Punch/Swing",6,1.0);
		
		NTUM A 0 A_JumpIfInventory("NutterUpgrade",1,2);
		NTCM A 0;
		"####" ABC 1;
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BA 1;
		
		NTFG D 0 A_JumpIfInventory("NutterUpgrade",1,2);
		NTCG D 0;
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" DD 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" DD 1;
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" DD 1;
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" DD 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" DD 1;
		Stop;
	CaberToss:
		"####" A 0 A_JumpIfInventory("MacheteAmmo",1,1);
		Goto ReadyMain;
		DEUL ABCD 1;
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",1,0.9);
				A_PlaySound("Machete2/Slash",5,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", 4);
			}
		}
		MCHT ABC 1;
		MCHT A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberMain");

		DEUL DCBA 1;
		Goto ReadyMain;
	Spawn:
		DEUG X -1;
		Stop;
	}
}

class DoubleDeuceProjectile : Actor // FastProjectile
{
	Default
	{
		Radius 8;
		Height 5;
		//MissileHeight 8;
		Speed 200;
		DamageFunction (18*random(1,3));
		Projectile;
		Renderstyle "Add";
		BounceType "Doom";
		BounceCount 5;
		BounceFactor 1.0;
		WallBounceFactor 1.0;
		Scale 0.5;
		Obituary "%k's powerful insult went right through everything that %o ever stood for.";
		Decal "NutcrackerChip";
		-NOGRAVITY
		+RIPPER
		+EXTREMEDEATH
		+USEBOUNCESTATE
		+FORCERADIUSDMG
		+SEEKERMISSILE
		//+GETOWNER
	}
	
	int User_Counter;
	
	States
	{
	Spawn:
		TRAC A 0 NoDelay {
			A_ScaleVelocity(frandom(0.8,1.2));
			A_ChangeVelocity(0, 0, 2, CVF_RELATIVE); //A_PlaySound("Nutcracker/Fly",5,0.4,1);
			if(CountInv("DeuceUpgrade",AAPTR_TARGET)) {
				BounceCount = 8;
				//WallBounceFactor = 0.85;
				//BounceFactor = 0.85;
			}
		}
		TRAC A 1 Bright; //A_ChangeVelocity(0, 0, -0.15, CVF_RELATIVE);
		Wait;
	Bounce:
		TRAC A 1 Bright {
			A_Explode(30,64,0);
			if(CountInv("DeuceUpgrade",AAPTR_TARGET)) {
				A_SeekerMissile(60,60,SMF_LOOK|SMF_CURSPEED,256,5);
				if(tracer) { A_FaceTracer(); }
			}
		}
		Goto Spawn+1;
	Death:
		TNT1 A 25 {
			A_Stop();
			bNOGRAVITY = 0;
			bUSEBOUNCESTATE = 0; // All this just to make damn fucking sure it doesn't freak the fuck out.
			A_Explode(30,64,0);
			A_PlaySound("Nutcracker/Hit",5,0.5);
			A_SpawnItemEx("NutcrackerPuff",0,0,0,0,0,0,0,SXF_CLIENTSIDE);
			A_QuakeEx(random(1,3),random(1,3),random(1,3),random(9,18),0,128,"none",QF_SCALEDOWN);
		}
		Stop;
	}
}