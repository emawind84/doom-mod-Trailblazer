class LeadSelected : Inventory { Default { Inventory.MaxAmount 1; } }
class LeadUpgrade :  Inventory { Default { Inventory.MaxAmount 1; } }

class LeadspitterPickup : CustomInventory
{
	Default
	{
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Grabbed a SC-P30 ''Leadspitter'' uzi! Let there be firefight, till they all fall to the ground! (4)";
		Scale 0.85;
	}
	
	States
	{
	Spawn:
		UZIG X -1;
		Stop;
	Pickup:
		TNT1 A 0 A_JumpIfInventory("LeadspitPickupCounter",2,"CheckAmmo");
		Goto GiveItNevertheless;
	CheckAmmo:
		TNT1 A 0 A_JumpIfInventory("BulletAmmo",0,"Bailure");
	GiveItNevertheless:
		TNT1 A 0 {
			if(CountInv("LeadspitPickupCounter") == 2) { A_SetMugshotState("Grin"); }
			if (FindInventory("Leadspitter") == NULL) A_GiveInventory("Leadspitter");
			//else A_GiveInventory("Leadspitter2");
			A_GiveInventory("LeadspitPickupCounter");
			A_GiveInventory("BulletAmmo",15);
		}
		Stop;
	Bailure:
		UZIG X 1;
		Fail;
	}
}

class LeadspitPickupCounter : Inventory
{
	Default
	{
		Inventory.Icon "TNT1A0";;
		Inventory.PickupMessage "DOUBLE YOUR FUN, DOUBLE YOUR GUN!";
		Inventory.MaxAmount 1;
		Inventory.Amount 1;
		-INVENTORY.INVBAR
	}
}

class UziClipRight : Ammo
{
	Default
	{
		Inventory.MaxAmount 30;
		Inventory.Icon "UZIGX0";
		+INVENTORY.IGNORESKILL
	}
}

class UziClipLeft : Ammo
{
	Default
	{
		Inventory.MaxAmount 30;
		Inventory.Icon "UZIGX0";
		+INVENTORY.IGNORESKILL
	}
}

//class Leadspitter2 : Leadspitter {}

class Leadspitter : TrailblazerWeapon
{
	Default
	{
		Weapon.AmmoUse 0;
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoGive2 0;
		Weapon.AmmoType "UziClipRight";
		Weapon.AmmoType2 "BulletAmmo";
		Weapon.SlotNumber 4;
		Weapon.SelectionOrder 3;
		Weapon.UpSound "Uzi/Up";
		Weapon.Kickback 125;
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Grabbed a SC-P30 ''Leadspitter'' uzi! Let there be firefight, till they all fall to the ground! (4)";
		Obituary "%o was turned into bullet pincushion by %k's ''Leadspitter''.";
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 2.0;
		Weapon.BobRangeY 0.6;
		Weapon.BobRangeX 0.8;
		Scale 0.85;
		+WEAPON.NOALERT
		+WEAPON.AMMO_CHECKBOTH
		//+WEAPON.NOAUTOAIM
	}
	
	//Hexen handling.
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoGive2 = 60;
			AmmoType2 = "BlueMana";
		}
		Super.AttachToOwner(user);
	}
	
	States
	{
	Ready:
		TNT1 A 0 A_JumpIfInventory("LeadspitPickupCounter",2,"TwinReady");
		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,"ReadyAnim");
		UZIU A 0;
		Goto ReadyAnim;
	TwinReady:
		TK3U A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ3U A 0;
	ReadyAnim:
		"####" ABC 1;
		TNT1 A 0 { If(CountInv("LeadspitPickupCounter") >= 2) { A_Overlay(7,"LIdle"); } Else { A_Overlay(7,"SingleLIdle"); } }
		TNT1 A 0 { If(CountInv("LeadspitPickupCounter") >= 2) { A_Overlay(9,"RIdle"); } Else { A_Overlay(9,"SingleRIdle"); } }
	ReadyMain:
		TNT1 A 1 A_WeaponReady();
		Loop;
	Fire:
		TNT1 A 0;
		Goto ReadyMain;
	SingleLIdle:
		TNT1 A 0 A_JumpIfInventory("LeadspitPickupCounter",2,"LIdle");
		TNT1 A 1;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Loop;
	Deselect:
		TNT1 A 0 {
			A_TakeInventory("ShotsWereFired");
			A_TakeInventory("LeadSelected");
			A_TakeInventory("PowerCrafterTimer");
			SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
			A_Overlay(7,"none");
			A_Overlay(9,"none");
			Return A_JumpIfInventory("LeadspitPickupCounter",2,"TwinDeselect");
		}
		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIU A 0;
	DeselectMain:
		"####" CBA 1;
	Czumulungwa:
		TNT1 A 1 A_Lower(18);
		Loop;
	TwinDeselect:
		TK3U A 0 A_JumpIfInventory("LeadUpgrade",1,"DeselectMain");
		UZ3U A 0;
		Goto DeselectMain;
	Select:
		TNT1 A 0 A_GiveInventory("LeadSelected");
		TNT1 A 0 SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
	HonkaCzongka:
		TNT1 A 1 A_Raise(12);
		Loop;
		
	SingleRIdle:
		"####" A 0 A_JumpIfInventory("LeadspitPickupCounter", 2, "RIdle");
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 1;
		"####" A 0 A_JumpIfAttack("SingleFire");
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_RELOAD), "SingleReload");
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberToss");
		Loop;
	SingleFire:
		"####" A 0 A_JumpIfInventory("UziClipRight",1,1);
		Goto SingleNope;
		"####" A 0 A_PlaySound("Uzi/Fire",CHAN_WEAPON,0.7);
		
		//Lead upgrade.
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,"TicklerSingleFire");
		
		"####" A 0 {
			A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			//66%
				If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
					If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
						A_FireProjectile("LeadspitterFirework",0,0,10,1);
					}
				}
			//33%
				If(Health <= 33 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
					If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
						A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
		}
		Goto SingleMain;
	TicklerSingleFire:
		"####" A 0 {
			A_PlaySound("Tickler/Fire",CHAN_AUTO);
			A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			//66%
			If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
			//33%
			If(Health <= 33 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
		}
	SingleMain:
		TIKF A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIF A 0;
		"####" A 0 {
			If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
				A_SetBlend("Blue",0.05,4);
			}
		}
		"####" A 0 A_AlertMonsters();
		"####" A 0 A_Overlay(8,"SingleGunflash");
		"####" A 1 Bright A_SetPitch(pitch-0.15 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 Bright A_SetPitch(pitch-0.1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"SingleMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"SingleMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
	SingleMain2:
		"####" A 0 A_JumpIfAttack("SingleFire");
		"####" C 1;
		"####" DE 1;
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 2;
		Goto SingleRIdle;
	SingleGunflash:
		TNT1 A 4 A_Light2();
		TNT1 A 4 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	SingleNope:
		"####" A 0 A_JumpIf((CountInv("HexenCounter") && CountInv("BlueMana")) ||
							(!CountInv("HexenCounter") && CountInv("BulletAmmo"))
							,"SingleReload");
		"####" A 0 A_PlaySound("Uzi/Dry",CHAN_AUTO,1.0);
		"####" A 0 A_TakeInventory("IsReloading",1);
		TIKF A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIF A 0;
		"####" EDCDE 1;
		Goto SingleRIdle;
	SingleReload:
		"####" A 0 A_JumpIfInventory("UziClipRight",0,"SingleRIdle");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,2);
		Goto SingleRIdle;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto SingleRIdle;
		TIKO A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIO A 0;
		"####" A 0 A_PlaySound("Uzi/Out",CHAN_AUTO,0.7);
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EF 1;
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" HI 1;
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,3);
		"####" A 0 A_SpawnItemEx("UziClipDrop",0,0,20,0,1);
		"####" A 0 A_Jump(256,2);
		"####" A 0 A_SpawnItemEx("SuperUziClipDrop",0,0,20,0,1);
		"####" J 5 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" J 5 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" J 5 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		
		TIKR A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIR A 0;
		"####" A 1;
		"####" B 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" C 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" E 1;
		"####" F 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" A 0 A_PlaySound("Uzi/In",CHAN_AUTO,0.7);
		"####" GHI 1;
		
		/*Before punching was added, there was a handed reload, but suddenly growing
		3rd hand doesn't make sense... unless you are James Bond.
		(not that those uzis are indeed reference to certain, infamous submachineguns
		from that certain game, heh.)
		
		UZIO A 0 A_PlaySound("Uzi/Out",CHAN_AUTO,0.7);
		UZIO ABCDEFGHI 1;
		UZIO J 20 A_SpawnItemEx("UziClipDrop",0,0,20,0,1);
		UZII ABCDEF 1;
		UZII A 0 A_PlaySound("Uzi/In",CHAN_AUTO,0.7);
		UZII GHI 1;*/
	Start:
		"####" A 0 A_JumpIfInventory("UziClipRight",0,"End");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,4);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,1);
		Goto End;
		"####" A 0 A_TakeInventory("BulletAmmo",1,1);
		"####" A 0 A_GiveInventory("UziClipRight",1);
		goto Start;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto End;
		"####" A 0 A_TakeInventory("BlueMana",1,1);
		"####" A 0 A_GiveInventory("UziClipRight",1);
		goto Start;
	End:
		/*UZII JKLMNOP 1;
		UZIO CBA 1;
		UZIG A 3;*/
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),1);
		"####" K 1;
		"####" L 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" M 1;
		"####" N 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" O 1;
		"####" P 1;
		TIKO A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIO A 0;
		"####" CBA 1;
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 3;
		Goto SingleRIdle;
	Punch:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
			}
		}
		"####" A 0 A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2);
		QML1 A 0 A_Jump(256,3);
		FML1 A 0 A_SetBlend("Orange",0.05,10);
		FML1 A 0 A_PlaySound("Melee/Firepunch",CHAN_AUTO);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
	SinglePunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Goto SingleLIdle;
		
	TwinPunch:
		TK2U A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2U A 0;
		"####" CBA 1;
	PunchSkulls:
		"####" A 0 {
				If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
			}
		}
		"####" A 0 A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
		QML1 A 0 A_JumpIfInventory("PowerStrength2",1,2);
		QML1 A 0 A_Jump(256,3);
		FML1 A 0 A_SetBlend("Orange",0.05,10);
		FML1 A 0 A_PlaySound("Melee/Firepunch",CHAN_AUTO);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchSkulls");
		TK2U A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2U A 0;
		"####" ABC 1;
		Goto LIdle;
		
	SingleCaberToss:
		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIU A 0;
		"####" CBA 1;
	SingleCaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
				A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
			}
		}
		MCHT ABC 1;
		TNT1 A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberMain");

		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIU A 0;
		"####" ABC 1;
		Goto SingleRIdle;
	CaberToss:
		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIU A 0;
		"####" CBA 1;
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
			A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
			A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
			If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
			}
		}
		MCHT ABC 1;
		TNT1 A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberMain");
		
		TIKU A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIU A 0;
		"####" ABC 1;
		Goto RIdle;
		
	LIdle:
		TK2G A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2G A 0;
		"####" A 1;
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_RELOAD), "LReload");
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "LFire");
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "TwinPunch");
		Loop;
	LFire:
		"####" A 0 A_JumpIfInventory("UziClipLeft",1,2);
		"####" A 0 A_Jump(256,"LReload");
		"####" A 0 A_PlaySound("Uzi/Fire",CHAN_AUTO,0.7);
		
		//Lead upgrade.
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,"TicklerLFire");
		
		"####" A 0 {
			A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,-13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			//66%
			If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			}
			//33%
			If(Health <= 33 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			}
		}
		Goto LFireMain;
	TicklerLFire:
		"####" A 0 {
			A_PlaySound("Tickler/Fire",CHAN_AUTO,0.8);;
			A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,-13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			//66%
			If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
				A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			}
			//33%
			If(Health <= 33 || CountInv("PowerBlazing")) {
			A_TakeInventory("UziClipLeft",1,TIF_NOTAKEINFINITE);
			A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,-10,1);
				}
			}
		}
	LFireMain:
		TK2F A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2F A 0;
		"####" A 0 {
			If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire",8);
				A_SetBlend("Blue",0.05,4);
			}
			If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
				//A_PlaySound("Uzi/Firework",CHAN_AUTO,0.8);
				A_FireProjectile("LeadspitterFirework",0,0,-10,1);
			}
		}
		"####" A 0 A_AlertMonsters();
		"####" A 0 A_Overlay(8,"LGunflash");
		"####" A 1 Bright A_SetPitch(pitch-0.15 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 Bright A_SetPitch(pitch-0.1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 { if(GetCvar("TB_SequentialShot")) {
				A_GiveInventory("ShotsWereFired",1);
			}
		}
		"####" A 0 A_FireProjectile("BuellerCasingSpawner4",0,0,-5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"LFireMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner4",0,0,-5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"LFireMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner4",0,0,-5,0,FPF_NOAUTOAIM);
	LFireMain2:
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "LFire");
		"####" C 1 A_TakeInventory("ShotsWereFired");
		"####" DE 1;
		TK2G A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2G A 0;
		"####" A 2;
		Goto LIdle;
	LGunflash:
		TNT1 A 4 A_Light2();
		TNT1 A 4 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	LNope:
		TK2F A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2F A 0;
		"####" A 0 A_PlaySound("Uzi/Dry",CHAN_AUTO,1.0);
		"####" A 0 A_TakeInventory("IsReloading",1);
		"####" EDCDE 1;
		Goto LIdle;
	LReload:
		"####" A 0 A_JumpIfInventory("UziClipLeft",0,"LIdle");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,2);
		Goto LNope;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto LNope;
		TK2O A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2O A 0;
		"####" A 0 A_PlaySound("Uzi/Out",CHAN_AUTO,0.7);
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EF 1;
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" HI 1;
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,3);
		"####" A 0 A_SpawnItemEx("UziClipDrop2",0,0,20,0,1);
		"####" A 0 A_Jump(256,2);
		"####" A 0 A_SpawnItemEx("SuperUziClipDrop2",0,0,20,0,1);
		"####" J 5 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" J 5 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" J 5 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		
		TK2R A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2R A 0;
		"####" A 1;
		"####" B 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" C 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" E 1;
		"####" F 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" A 0 A_PlaySound("Uzi/In",CHAN_AUTO,0.7);
		"####" GHI 1;
	LStart:
		"####" A 0 A_JumpIfInventory("UziClipLeft",0,"LEnd");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,4);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,1);
		Goto LEnd;
		"####" A 0 A_TakeInventory("BulletAmmo",1,1);
		"####" A 0 A_GiveInventory("UziClipLeft",1);
		goto LStart;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto LEnd;
		"####" A 0 A_TakeInventory("BlueMana",1,1);
		"####" A 0 A_GiveInventory("UziClipLeft",1);
		goto LStart;
	LEnd:
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),1);
		"####" K 1;
		"####" L 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" M 1;
		"####" N 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" O 1;
		"####" P 1;
		
		TK2O A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2O A 0;
		"####" CBA 1;
		TK2G A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZ2G A 0;
		"####" A 3;
		Goto LIdle;
	
	RIdle:
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 1;
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberToss");
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_RELOAD), "RReload");
		"####" A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		Loop;
		
	RFire:
		"####" A 0 A_JumpIfInventory("UziClipRight",1,2);
		"####" A 0 A_Jump(256,"RReload");
		"####" A 0 A_PlaySound("Uzi/Fire",CHAN_WEAPON,0.7);
		
		//Lead upgrade.
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,"TicklerRFire");
		
		"####" A 0 {
			A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			//66%
			If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
			//33%
			If(Health <= 33 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(5.0, 2.75, -1, 5, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
		}
		Goto RFireMain;
	TicklerRFire:
		"####" A 0 {
			A_PlaySound("Tickler/Fire",CHAN_AUTO,0.8);
			A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
			A_FireProjectile("GunsmokeSpawner_Small_MG",0,0,13,-6,FPF_NOAUTOAIM);
			
			//100%
			A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
			
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			//66%
			If(Health <= 66 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
			//33%
			If(Health <= 33 || CountInv("PowerBlazing")) {
				A_TakeInventory("UziClipRight",1,TIF_NOTAKEINFINITE);
				A_FireBullets(3.0, 1.75, -1, 6, "ChainsmokerPuff");
				
				If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
					A_FireProjectile("LeadspitterFirework",0,0,10,1);
				}
			}
		}
	RFireMain:
		TIKF A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIF A 0;
		"####" A 0 {
			If(CountInv("PowerQuadDamage")) {
				A_StartSound("QuadDamage/Fire", 8, CHANF_NOSTOP);
				A_SetBlend("Blue",0.05,4);
			}
			If(CountInv("SpontaneousFreedom") && (random(1,17) == 1)) {
				//A_PlaySound("Uzi/Firework",CHAN_AUTO,0.8);
				A_FireProjectile("LeadspitterFirework",0,0,10,1);
			}
		}
		"####" A 0 A_AlertMonsters();
		"####" A 0 A_Overlay(10,"RGunflash");
		"####" A 1 Bright A_SetPitch(pitch-0.15 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 Bright A_SetPitch(pitch-0.1 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"RFireMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" A 0 A_Jump(256,"RFireMain2");
		"####" A 0 A_FireProjectile("BuellerCasingSpawner2",0,0,5,0,FPF_NOAUTOAIM);
	RFireMain2:
		"####" A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		"####" C 1;
		"####" DE 1;
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 2;
		Goto RIdle;
	RGunflash:
		TNT1 A 4 A_Light2();
		TNT1 A 4 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	RNope:
		TIKF A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIF A 0;
		"####" A 0 A_PlaySound("Uzi/Dry",CHAN_AUTO,1.0);
		"####" A 0 A_TakeInventory("IsReloading",1);
		"####" EDCDE 1;
		Goto RIdle;
	RReload:
		"####" A 0 A_JumpIfInventory("UziClipRight",0,"RIdle");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,2);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,2);
		Goto RNope;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto RNope;
		TIKO A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIO A 0;
		"####" A 0 A_PlaySound("Uzi/Out",CHAN_AUTO,0.7);
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EF 1;
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" HI 1;
		"####" A 0 A_JumpIfInventory("LeadUpgrade",1,3);
		"####" A 0 A_SpawnItemEx("UziClipDrop",0,0,20,0,1);
		"####" A 0 A_Jump(256,2);
		"####" A 0 A_SpawnItemEx("SuperUziClipDrop",0,0,20,0,1);
		"####" J 5 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" J 5 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" J 5 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		
		TIKR A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIR A 0;
		"####" A 1;
		"####" B 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" C 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" E 1;
		"####" F 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" A 0 A_PlaySound("Uzi/In",CHAN_AUTO,0.7);
		"####" GHI 1;
	RStart:
		"####" A 0 A_JumpIfInventory("UziClipRight",0,"REnd");
		"####" A 0 A_JumpIfInventory("HexenCounter",1,4);
		"####" A 0 A_JumpIfInventory("BulletAmmo",1,1);
		Goto REnd;
		"####" A 0 A_TakeInventory("BulletAmmo",1,1);
		"####" A 0 A_GiveInventory("UziClipRight",1);
		goto RStart;
		"####" A 0 A_JumpIfInventory("BlueMana",1,1);
		Goto REnd;
		"####" A 0 A_TakeInventory("BlueMana",1,1);
		"####" A 0 A_GiveInventory("UziClipRight",1);
		goto RStart;
	REnd:
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" K 1;
		"####" L 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" M 1;
		"####" N 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" O 1;
		"####" P 1;
		TIKO A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIO A 0;
		"####" CBA 1;
		TIKG A 0 A_JumpIfInventory("LeadUpgrade",1,2);
		UZIG A 0;
		"####" A 3;
		Goto RIdle;
	Spawn:
		UZIG X -1;
		Stop;
	}
}

//FWOOSH!
class LeadspitterFirework : FastProjectile
{
	Default
	{
		Radius 7;
		Height 5;
		MissileHeight 8;
		Speed 60;
		Damage 10;
		SeeSound "Uzi/Firework";
		Obituary "%o got shown the greatness of %k's take on 4th of July.";
		Scale 0.25;
		Decal "Scorch";
		DamageType "Patriarch";
		MissileType "LeadspitterFireworkTrail";
		Projectile;
		-NOGRAVITY
		+FORCERADIUSDMG
		+SEEKERMISSILE
	}
	
	States
	{
	Spawn:
		FWRK A 1 NoDelay Bright {
			/*A_SpawnItemEx("LeadspitterFireworkTrail",
			frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(-2.0, 2.0),
			frandom(1.5, -2.5), frandom(-1.0, 1.0), frandom(-1.0, 1.0),
			0, SXF_CLIENTSIDE, 10);*/
			A_ChangeVelocity(frandom(4.0,-4.0),frandom(4.0,-4.0),frandom(4.0,-4.0),CVF_RELATIVE);
			A_SeekerMissile(2,2,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,64,2);
		}
		Loop;
	Death:
		TNT1 A 0 {
			A_SpawnItemEx("LeadspitterFireworkExp",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			A_PlaySound("Explosion/Init",CHAN_AUTO,0.6);
			//A_PlaySound("Explosion/Layer",CHAN_AUTO,0.6);
			A_PlaySound("Explosion/Flavor",CHAN_AUTO,0.6);
			A_Explode(100,72,0);
		}
		TNT1 A 12 A_QuakeEx(1,1,1,12,0,128,"none",QF_SCALEDOWN);
		Stop;
	}
}

class LeadspitterFireworkTrail : Actor
{
	Default
	{
		Alpha 0.0;
		Scale 0.0;
		RenderStyle "Add";
		+NOINTERACTION
		+NOTONAUTOMAP
		+FORCEXYBILLBOARD
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay {
				Return A_Jump(256, "SpriteA", "SpriteB", "SpriteC", "SpriteD",
								   "SpriteE", "SpriteF", "SpriteG", "SpriteH",
								   "SpriteI", "SpriteJ", "SpriteK", "SpriteL");
			}
		SpriteA:
			FRES A 0;
			Goto SetupScale;
		SpriteB:
			FRES B 0;
			Goto SetupScale;
		SpriteC:
			FRES C 0;
			Goto SetupScale;
		SpriteD:
			FRES D 0;
			Goto SetupScale;
		SpriteE:
			FRES E 0;
			Goto SetupScale;
		SpriteF:
			FRES F 0;
			Goto SetupScale;
		SpriteG:
			FRES G 0;
			Goto SetupScale;
		SpriteH:
			FRES H 0;
			Goto SetupScale;
		SpriteI:
			FRES I 0;
			Goto SetupScale;
		SpriteJ:
			FRES J 0;
			Goto SetupScale;
		SpriteK:
			FRES K 0;
			Goto SetupScale;
		SpriteL:
			FRES L 0;
			Goto SetupScale;
		SetupScale:
			"####" "#" 0 A_SetScale(frandom(0.04, 0.05));
		FadeIn:
			"####" "#" 1 {
				A_FadeIn(FRandom(0.01, 0.04));
				A_ChangeVelocity(frandom(-0.02, 0.02), frandom(-0.02, 0.02), frandom(-0.02, 0.03), 0);
				A_SetScale(Scale.X + frandom(0.001, 0.002));
				Return A_JumpIf(Alpha >= 0.3, "Inter");
			}
			Loop;
		Inter:
			"####" "#" 1 {
				A_ChangeVelocity(frandom(-0.02, 0.02), frandom(-0.02, 0.02), frandom(-0.02, 0.03), 0);
				A_SetScale(Scale.X + frandom(0.001, 0.002));
				Return A_Jump(96,"FadeOut");
			}
			Loop;
		FadeOut:
			"####" "#" 1 {
				A_ChangeVelocity(frandom(-0.02, 0.02), frandom(-0.02, 0.02), frandom(-0.02, 0.03), 0);
				A_SetScale(Scale.X + FRandom(0.001, 0.002));
				A_FadeOut(frandom(0.04,0.05));
			}
			Loop;
	}
}

class LeadspitterFireworkExp : Actor
{
	Default
	{
		+NOINTERACTION
	}
	
	int User_Counter;
	float User_Spread;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			for(User_Counter = 0; User_Counter < 15; User_Counter++)
			{
				A_SpawnItemEx("LeadspitterFireworkSparkFlying",
					0,0,0,
					frandom(frandom(1.0,7.0),frandom(-1.0,-7.0)),
					frandom(frandom(1.0,7.0),frandom(-1.0,-7.0)),
					frandom(frandom(1.0,7.0),frandom(-1.0,-2.0)),
					SXF_CLIENTSIDE,24);
			}
			for(User_Counter = 0; User_Counter < 5; User_Counter++)
			{
				A_SpawnItemEx("Patriarch_Smoke", frandom(-3.0, 3.0),
					frandom(-3.0, 3.0), frandom(-3.0, 3.0),
					frandom(2.0, -1.0), frandom(-0.9, 0.9),
					frandom(-0.2, 0.9), frandom(0.0,360.0), SXF_CLIENTSIDE, 10);
			}
			User_Counter = random(17,23);
			A_SpawnItemEx("LeadspitterFireworkFlare",0,0,0,0,0,0,0,SXF_CLIENTSIDE);
		}
	BlazboBibbins:
		TNT1 A random(1,0) {
				User_Counter--;
				User_Spread = User_Spread + frandom(1.0,5.0);
				A_SpawnItemEx("LeadspitterFireworkSparkStatic",
					User_Spread * frandom(1.0,-1.0),
					User_Spread * frandom(1.0,-1.0),
					User_Spread * frandom(1.0,-1.0),
					0,0,0,SXF_CLIENTSIDE,16);
				//Return A_JumpIf(User_Counter > 0, "BlazboBibbins"); //Unless you want them all returned in same frame anyway, I wouldn't recommend that.
		}
		TNT1 A 0 A_JumpIf(User_Counter > 0, "BlazboBibbins");
		Stop;
	}
}

class LeadspitterFireworkSparkFlying : Actor //: FastProjectile
{
	Default
	{
		//MissileType "LeadspitterFireworkSparkFlyingTrail"
		Radius 3;
		Height 3;
		Gravity 0.1;
		Renderstyle "None";
		Projectile;
		+THRUACTORS
		-NOGRAVITY
	}
	
	int User_Lifespan;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			User_Lifespan = random(5,25);
			Return A_Jump(256,"Red","White","Blue");
		}
	Red:
		RPRT A 0;
		Goto Main;
	White:
		WPRT A 0;
		Goto Main;
	Blue:
		BPRT A 0;
		Goto Main;
	Main:
		"####" A 1 {
			A_ChangeVelocity(Vel.X * frandom(0.97, 0.99),
							 Vel.Y * frandom(0.97, 0.99),
							 Vel.Z - frandom(0.1, 0.2),
							 CVF_REPLACE);
			A_SpawnItemEx("LeadspitterFireworkSparkFlyingTrail",
				0,0,0,0,0,0,0,SXF_CLIENTSIDE|SXF_TRANSFERSPRITEFRAME);
			User_Lifespan--;
			Return A_JumpIf(User_Lifespan <= 0, "Null");
		}
		Loop;
	}
}

class LeadspitterFireworkSparkFlyingTrail : Actor
{
	Default
	{
		Renderstyle "Add";
		+NOINTERACTION
	}
	
	States
	{
	Spawn:
		"####" A 0 NoDelay {
			A_FadeIn(frandom(0.8,0.99));
			A_SetScale(frandom(0.035, 0.055));
		}
		"####" A 1 Bright {
			A_FadeOut(frandom(0.05,0.04));
			A_SetScale(Scale.X - frandom(0.001, 0.002));
			Return A_JumpIf(Scale.X <= 0, "Null");
		}
		Wait;
	}
}

class LeadspitterFireworkSparkStatic : LeadspitterFireworkSparkFlyingTrail
{
	Default
	{
		Alpha 0.1;
		Scale 0.05;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,"Red","White","Blue");
	Red:
		RPRT A 0;
		Goto Main;
	White:
		WPRT A 0;
		Goto Main;
	Blue:
		BPRT A 0;
		Goto Main;
	Main:
		"####" A 1 Bright {
			A_FadeIn(frandom(0.15,0.125));
			A_ChangeVelocity(frandom(0.1,-0.1),frandom(0.1,-0.1),frandom(0.1,-0.1));
			A_SetScale(Scale.X + frandom(0.001, 0.002));
			Return A_JumpIf(Alpha >= 0.96, "PhaseTwo");
		}
		Loop;
	PhaseTwo:
		"####" A 1 Bright {
			A_FadeOut(frandom(0.05,0.06));
			A_SetScale(Scale.X + frandom(-0.001, -0.002));
			Return A_JumpIf(Scale.X <= 0, "Null");
		}
		Loop;
	}
}

class LeadspitterFireworkFlare : LeadspitterFireworkSparkFlyingTrail
{
	Default
	{
		Scale 1;
		Alpha 0.8;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256,"Red","White","Blue");
	Red:
		FREF A 0;
		Goto Main;
	White:
		FREF B 0;
		Goto Main;
	Blue:
		FREF C 0;
		Goto Main;
	Main:
		"####" "#" 1 Bright {
			A_FadeOut(frandom(0.03,0.04));
			A_SetScale(Scale.X - frandom(0.01, 0.02));
			Return A_JumpIf(Scale.X <= 0, "Null");
		}
		Loop;
	}
}