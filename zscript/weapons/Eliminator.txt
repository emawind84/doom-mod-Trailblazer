//This weapon is sponsored by waste.money.com

class EliminatorSelected : Inventory { Default { Inventory.MaxAmount 1; } }
class EliminatorUpgrade : Inventory { Default { Inventory.MaxAmount 1; } }
class EliminatorFocused : Inventory { Default { Inventory.MaxAmount 1; } } //Something to let ACS know that you are doing it.

class EliminatorPickup : CustomInventory
{
	Default
	{
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Flipped out at ZZ ''Eliminator'' lever-action shotgun! Come with me, sharp-dressed gun. (3)";
	}
	
	States
	{
	Spawn:
		LEVG X -1;
		Stop;
	Pickup:
		TNT1 A 0 A_JumpIfInventory("EliminatorPickupCounter",2,"CheckAmmo");
		Goto GiveItNevertheless;
	CheckAmmo:
		TNT1 A 0 { If(A_JumpIfInventory("DemShellsAmmo",0,"Null")) {
				Return ResolveState("Bailure");
			}
			Return ResolveState(Null);
		}
	GiveItNevertheless:
		TNT1 A 0 {
			if(CountInv("EliminatorPickupCounter") == 2) { A_SetMugshotState("Grin"); }
			if (FindInventory("Eliminator") == NULL) A_GiveInventory("Eliminator");
			//else A_GiveInventory("Eliminator2");
			A_GiveInventory("DemShellsAmmo",8);
			A_GiveInventory("EliminatorPickupCounter",1);
		}
		Stop;
	Bailure:
		LEVG X 1;
		Fail;
	}
}

class EliminatorPickupCounter : Inventory
{
	Default
	{
		Inventory.Icon "TNT1A0";
		Inventory.MaxAmount 1;
		Inventory.Amount 1;
		-INVENTORY.INVBAR
	}
	
	States
	{
	Spawn:
		LEVG X -1;
		Stop;
	}
}

//class Eliminator2 : Eliminator {}

class Eliminator : TrailblazerWeapon
{
	Default
	{
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "DemShellsAmmo";
		Weapon.SlotNumber 3;
		Weapon.SelectionOrder 2;
		Weapon.UpSound "Eliminator/Up";
		Weapon.Kickback 100;
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Flipped out at ZZ ''Eliminator'' lever-action shotgun! Come with me, sharp-dressed gun. (3)";
		Obituary "%o was eliminated by %k's ''Eliminator''.";
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 1.6;
		Weapon.BobRangeY 0.5;
		Weapon.BobRangeX 0.9;
		+WEAPON.NOALERT
		//+WEAPON.AMMO_CHECKBOTH
		//+NOAUTOAIM
	}
	
	//Hexen handling.
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoGive1 = 64;
			AmmoType1 = "GreenMana";
			AmmoUse1 = 8;
		}
		Super.AttachToOwner(user);
	}
	
	States
	{
	Spawn:
		LEVG X -1;
		Stop;
	
	//Focus handler. Also ammo handler.
	FocusHandler:
		TNT1 A 1 {
			if(GetPlayerInput(INPUT_BUTTONS) & BT_RELOAD) {
                A_ZoomFactor(1.5);
				A_SetInventory("EliminatorFocused",1);
            }
            else {
                A_ZoomFactor(1.0);
				A_SetInventory("EliminatorFocused",0);
            }
		}
		Loop;
	
	//Ready.
	Ready:
		LEVG Q 0 {
			If(CountInv("EliminatorPickupCounter") >= 2) {
				A_Overlay(16,"LReady");
			}
		}
		LEVG Q 1;
		LEVG R 1; 
		LEVG S 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 0 { If(CountInv("EliminatorPickupCounter") >= 2) { A_Overlay(16,"LIdle"); } Else { A_Overlay(16,"SingleLIdle"); } }
		TNT1 A 0 { If(CountInv("EliminatorPickupCounter") >= 2) { A_Overlay(17,"RIdle"); } Else { A_Overlay(17,"SingleRIdle"); } }
	ReadyMain:
		TNT1 A 1 A_WeaponReady;
		Loop;
	Fire:
		TNT1 A 0;
		GOto ReadyMain;
	LReady:
		TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		LEVG Q 1;
		LEVG R 1; 
		LEVG S 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		Stop;
	
	//Deselect
	Deselect:
		TNT1 A 3 {
			//A_Overlay(9,"None");
			A_ZoomFactor(1.0);
			A_SetInventory("EliminatorFocused",0);
			A_TakeInventory("ShotsWereFired",1);
			A_TakeInventory("EliminatorSelected",1);
			A_TakeInventory("PowerCrafterTimer",1);
			SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
			A_Overlay(17,"RDeselectMain");
			If(CountInv("EliminatorPickupCounter") >= 2) {
				A_Overlay(16,"LDeselectMain");
			}
		}
		TNT1 A 1 A_Lower(18);
		Wait;
	LDeselectMain:
		TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
	RDeselectMain:
		LEVG SRQ 1;
		Stop;
		
	//Select
	Select:
		TNT1 A 0 { 
			A_GiveInventory("EliminatorSelected",1);
			A_Overlay(19,"FocusHandler");
			A_Overlay(17,"RSelectMain");
			If(CountInv("EliminatorPickupCounter") >= 2) {
				A_Overlay(16,"LSelectMain");
			}
			SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
		}
		TNT1 A 1 A_Raise(12);
		Wait;
	LDSelectMain:
		TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
	RSelectMain:
		LEVG QRS 1;
		Stop;
	
	//Single L Idle.
	SingleLIdle:
		TNT1 A 0 A_JumpIfInventory("EliminatorPickupCounter",2,"LIdle");
		TNT1 A 1;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Loop;
	Punch:
		QML1 A 0 {
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
			A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
			Return A_JumpIf(!CountInv("PowerStrength2"),2);
		}
		FML1 A 0 {
			A_SetBlend("Orange",0.05,10);
			A_PlaySound("Melee/Firepunch",CHAN_AUTO);
		}
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing")  || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Goto SingleLIdle;
	
	//Single R Idle.
	SingleRIdle:
		TNT1 A 0 A_JumpIfInventory("EliminatorPickupCounter",2,"RIdle");
		LEVG A 1;
		LEVG A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberToss");
		LEVG A 0 A_JumpIfAttack("SingleRFire");
		Loop;
	SingleCaberToss:
		LEVG SRQ 1;
	SingleCaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
			A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
			A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
		}
		MCHT ABC 1;
		TNT1 A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberMain");
		LEVG QRS 1;
		Goto SingleRIdle;
	
	//Single R Fire.	
	SingleRFire:
		LEVG A 0 {
			If((CountInv("HexenCounter") && CountInv("GreenMana") >= 8) || (!CountInv("HexenCounter") && CountInv("DemShellsAmmo"))) { Return A_Jump(256,1); }
			Return ResolveState("SingleRNope");
		}
	SingleRMain:
		LEVG A 0 {
			A_PlaySound("Eliminator/Fire",CHAN_WEAPON,0.5);
			A_PlaySound("Eliminator/AddFire",CHAN_AUTO,0.7);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,7,-4,FPF_NOAUTOAIM);
			A_AlertMonsters();
			A_Recoil(4.0);
			A_Overlay(18,"RGunflash");
			If(CountInv("EliminatorUpgrade")) {
				If(CountInv("UraniumShot")) { A_RailAttack(12*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(12*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
				Else						{ A_RailAttack(12*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(12*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
			}	Else If(CountInv("UraniumShot")) { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 12, 10, "EliminatorUraniumPuff", FBF_USEAMMO); }
				Else 							 { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 12, 10, "EliminatorPuff", FBF_USEAMMO); }
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		LEVG A 1 A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR A 1 A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR B 1;
		LEVR C 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVR D 1;
		LEVR E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVR F 1;
		LEVR G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVR H 1;
		LEVR I 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG B 1;
		LEVG C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG D 1;
		LEVG E 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG F 1;
		LEVG F 0 A_PlaySound("Eliminator/Open",CHAN_AUTO,0.8);
		LEVG A 0;
		"####" G 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" H 1;
		"####" I 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG J 1 A_FireProjectile("DatShottyCasingSpawner",0,0,0,-5,FPF_NOAUTOAIM);
		LEVG K 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG L 1;
		LEVG F 0 A_PlaySound("Eliminator/Close",CHAN_AUTO,0.8);
		LEVG M 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG N 1;
		LEVG O 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG P 1;
		LEVG Q 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		LEVG R 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG S 1;
		LEVG T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG U 1;
		LEVG A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),"SingleRIdle");
		//LEVG A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "SingleRFire");
		Goto SingleRIdle;
	SingleRNope:
		LEVG A 0 A_PlaySound("Eliminator/DryFire",CHAN_AUTO,0.6);
		LEVG A 1 A_OverlayOffset(OverlayID(),3,3);
		LEVG A 1 A_OverlayOffset(OverlayID(),2,2);
		LEVG A 1 A_OverlayOffset(OverlayID(),1,1);
		LEVG A 5 A_OverlayOffset(OverlayID(),0,0);
		Goto SingleRIdle;
	
	//Left Idle.
	LIdle:
		LEVG A 1 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		LEVG A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK), "LFire");
		LEVG A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "TwinPunch");
		Loop;
	TwinPunch:
		LEVG SRQ 1;
	PunchFleshAndBlood:
		QML1 A 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
			A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
			Return A_JumpIf(!CountInv("PowerStrength2"),2);
		}
		FML1 A 0 {
			A_SetBlend("Orange",0.05,10);
			A_PlaySound("Melee/Firepunch",CHAN_AUTO);
		}
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchFleshAndBlood");
		LEVG QRS 1;
		Goto LIdle;
	
	//Left fire.
	LFire:
		LEVG A 0 {
			If((CountInv("HexenCounter") && CountInv("GreenMana") >= 8) || (!CountInv("HexenCounter") && CountInv("DemShellsAmmo"))) { Return A_Jump(256,1); }
			Return ResolveState("LNope");
		}
	LMain:
		LEVG A 0 {
			A_PlaySound("Eliminator/Fire",CHAN_WEAPON,0.5);
			A_PlaySound("Eliminator/AddFire",CHAN_AUTO,0.7);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,-7,-4,FPF_NOAUTOAIM);
			A_AlertMonsters();
			A_Recoil(4.0);
			A_Overlay(18,"LGunflash");
			If(CountInv("EliminatorUpgrade")) {
				If(CountInv("UraniumShot")) { A_RailAttack(14*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(14*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
				Else						{ A_RailAttack(12*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(12*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
			}	Else If(CountInv("UraniumShot")) { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 12, 10, "EliminatorUraniumPuff", FBF_USEAMMO); }
				Else 							 { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 10, 10, "EliminatorPuff", FBF_USEAMMO); }
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		LEVG A 1 A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR A 1 A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR B 1;
		LEVR C 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVR D 1;
		LEVR E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVR F 1;
		LEVR G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVR H 1;
		LEVR I 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG B 1;
		LEVG C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG D 1;
		LEVG E 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG F 1;
		LEVG F 0 A_PlaySound("Eliminator/Open",CHAN_AUTO,0.8);
		LEVG A 0;
		"####" G 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" H 1;
		"####" I 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG J 0 { if(GetCvar("TB_SequentialShot")) {
				A_GiveInventory("ShotsWereFired",1);
			}
		}
		LEVG J 1 A_FireProjectile("DatShottyCasingSpawnerReversed",0,0,0,-5,FPF_NOAUTOAIM);
		LEVG K 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG L 1;
		LEVG F 0 A_PlaySound("Eliminator/Close",CHAN_AUTO,0.8);
		LEVG M 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG N 1;
		LEVG O 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG P 1;
		LEVG Q 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		LEVG R 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG S 1;
		LEVG T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG U 1;
		LEVG A 0 A_TakeInventory("ShotsWereFired",1);
		LEVG A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),"LIdle");
		Goto LIdle;
	LGunflash:
		TNT1 A 0 {
			A_OverlayFlags(OverlayID(),PSPF_RENDERSTYLE|PSPF_FLIP|PSPF_MIRROR,1);
			A_OverlayRenderstyle(OverlayID(),STYLE_Add);
		}
		LEVF A 1 Bright A_Light2;
		LEVF B 1 Bright;
		TNT1 A 2;
		TNT1 A 5 A_Light1;
		TNT1 A 0 A_Light0;
		Stop;
	LNope:
		LEVG A 0 A_PlaySound("Eliminator/DryFire",CHAN_AUTO,0.6);
		LEVG A 1 A_OverlayOffset(OverlayID(),3,3);
		LEVG A 1 A_OverlayOffset(OverlayID(),2,2);
		LEVG A 1 A_OverlayOffset(OverlayID(),1,1);
		LEVG A 5 A_OverlayOffset(OverlayID(),0,0);
		Goto LIdle;
	
	//Right fire.
	RIdle:
		LEVG A 1;
		LEVG A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberToss");
		LEVG A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		Loop;
	CaberToss:
		LEVG SRQ 1;
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
				A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
		}
		MCHT ABC 1;
		TNT1 A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangBerserkProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				} Else {
					A_SpawnItemEx("MacheterangProjectile",cos(-pitch)*48,0,32+(sin(-pitch)*48),cos(-pitch)*35,0,sin(-pitch)*35,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberMain");
		LEVG QRS 1;
		Goto RIdle;
		
	RFire:
		LEVG A 0 {
			If((CountInv("HexenCounter") && CountInv("GreenMana") >= 8) || (!CountInv("HexenCounter") && CountInv("DemShellsAmmo"))) { Return A_Jump(256,1); }
			Return ResolveState("RNope");
		}
	RMain:
		LEVG A 0 {
			A_PlaySound("Eliminator/Fire",CHAN_WEAPON,0.5);
			A_PlaySound("Eliminator/AddFire",CHAN_AUTO,0.7);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,7,-4,FPF_NOAUTOAIM);
			A_AlertMonsters();
			A_Recoil(4.0);
			A_Overlay(18,"RGunflash");
			If(CountInv("EliminatorUpgrade")) {
				If(CountInv("UraniumShot")) { A_RailAttack(14*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(14*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorUraniumPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
				Else						{ A_RailAttack(12*random(1,3),0,1,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2);
											  for(int butterspread = 0; butterspread < 9; butterspread++) { A_RailAttack(12*random(1,3),0,0,"","",RGF_SILENT,0,"EliminatorPuffRail",CountInv("EliminatorFocused") ? 2.5 : 7.0,0.25,0,0,0,0,"none",0,0,2); } }
			}	Else If(CountInv("UraniumShot")) { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 12, 10, "EliminatorUraniumPuff", FBF_USEAMMO); }
				Else 							 { A_FireBullets(CountInv("EliminatorFocused") ? 2.5 : 7.0, 0.25, 10, 10, "EliminatorPuff", FBF_USEAMMO); }
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		LEVG A 1 A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR A 1 A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		LEVR B 1;
		LEVR C 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVR D 1;
		LEVR E 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVR F 1;
		LEVR G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVR H 1;
		LEVR I 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG B 1;
		LEVG C 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG D 1;
		LEVG E 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG F 1;
		LEVG F 0 A_PlaySound("Eliminator/Open",CHAN_AUTO,0.8);
		LEVG A 0;
		"####" G 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" H 1;
		"####" I 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG J 1 A_FireProjectile("DatShottyCasingSpawner",0,0,0,-5,FPF_NOAUTOAIM);
		LEVG K 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG L 1;
		LEVG F 0 A_PlaySound("Eliminator/Close",CHAN_AUTO,0.8);
		LEVG M 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG N 1;
		LEVG O 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG P 1;
		LEVG Q 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		LEVG R 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG S 1;
		LEVG T 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG U 1;
		LEVG A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		LEVG A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		LEVG A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		LEVG A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			//If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		Goto SingleRIdle;
	RGunflash:
		TNT1 A 0 {
			A_OverlayFlags(OverlayID(),PSPF_RENDERSTYLE,1);
			A_OverlayRenderstyle(OverlayID(),STYLE_Add);
		}
		LEVF A 1 Bright A_Light2;
		LEVF B 1 Bright;
		TNT1 A 2;
		TNT1 A 5 A_Light1;
		TNT1 A 0 A_Light0;
		Stop;
	RNope:
		LEVG A 0 A_PlaySound("Eliminator/DryFire",CHAN_AUTO,0.6);
		LEVG A 1 A_OverlayOffset(OverlayID(),3,3);
		LEVG A 1 A_OverlayOffset(OverlayID(),2,2);
		LEVG A 1 A_OverlayOffset(OverlayID(),1,1);
		LEVG A 5 A_OverlayOffset(OverlayID(),0,0);
		Goto RIdle;
	}
}