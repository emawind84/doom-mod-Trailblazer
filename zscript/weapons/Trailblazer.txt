class TrailblazerWeapon : Weapon
{
    double Angle;
    double Pitch;

    action state A_JumpIfAttack(statelabel state)
    {
        if (!player || !invoker) return null;

        int button = invoker.bOffhandWeapon ? BT_OFFHANDATTACK : BT_ATTACK;
        return GetPlayerInput(INPUT_BUTTONS) & button? ResolveState(state) : null;
    }

    action state A_JumpIfAltAttack(statelabel state)
    {
        if (!player || !invoker) return null;

        int button = invoker.bOffhandWeapon ? BT_OFFHANDALTATTACK : BT_ALTATTACK;
        return GetPlayerInput(INPUT_BUTTONS) & button? ResolveState(state) : null;
    }

    override void Tick()
    {
        Super.Tick();
        
        if (!owner) return;

        if (self.bOffhandWeapon)
        {
            Angle = owner.OffhandAngle + 90;
            Pitch = -owner.OffhandPitch;
        }
        else
        {
            Angle = owner.AttackAngle + 90;
            Pitch = -owner.AttackPitch;
        }
        //Console.Printf("%f %f", Angle, Pitch);
    }
}