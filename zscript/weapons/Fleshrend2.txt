class Fleshrend2 : TrailblazerWeapon
{
	Default
	{
		Weapon.AmmoUse 2;
		Weapon.AmmoUse2 2;
		Weapon.AmmoGive 6;
		Weapon.AmmoType "ShellsAmmo";
		Weapon.AmmoType2 "ShellsAmmo";
		Weapon.SlotNumber 3;
		Weapon.SelectionOrder 2;
		Weapon.UpSound "Fleshrend/Up";
		Weapon.Kickback 150;
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "Obtained a really damn stylish ''Fleshrend'' sawed-off! Peeling off the skins - multiple enemies at a time! (3)";
		Obituary "%o was plastered over local furniture by %k's ''Fleshrend''.";
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 2.0;
		Weapon.BobRangeY 0.5;
		Weapon.BobRangeX 0.7;
		TrailblazerWeapon.SecondWeapon "Fleshrend";
		+WEAPON.NOALERT
		+WEAPON.AMMO_CHECKBOTH
		//+WEAPON.NOAUTOAIM
	}
	
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoUse1 = 4;
			AmmoUse2 = 4;
			AmmoGive1 = 24;
			AmmoType1 = "BlueMana";
			AmmoType2 = "BlueMana";
		}
		Super.AttachToOwner(user);
	}
	
	States
	{
	Ready:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"TwinReady");
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,"ReadyAnim");
		RNDY A 0;
		Goto ReadyAnim;
	TwinReady:
		3N2L A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RN2L A 0;
	ReadyAnim:
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		"####" EF 1;
		"####" G 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		"####" H 1;
		TNT1 A 0 { If(CountInv("FleshrendPickupCounter") >= 2) { A_Overlay(74,"LIdle"); } Else { A_Overlay(74,"SingleLIdle"); } }
		TNT1 A 0 { If(CountInv("FleshrendPickupCounter") >= 2) { A_Overlay(76,"RIdle"); } Else { A_Overlay(76,"SingleRIdle"); } }
	ReadyMain:
		TNT1 A 1 A_WeaponReady();
		Loop;
	Fire:
		TNT1 A 0;
		GOto ReadyMain;
		
	SingleLIdle:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"LIdle");
		TNT1 A 1;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Loop;
	Deselect:
		TNT1 A 0 {
			A_TakeInventory("ShotsWereFired");
			A_TakeInventory("RendSelected");
			A_TakeInventory("PowerCrafterTimer");
			SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
			A_Overlay(76,"none");
			A_Overlay(74,"none");
		}
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"TwinDeselect");
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,"DeselectMain");
		RNDN A 0;
		Goto DeselectMain;
	TwinDeselect:
		3N3N A 0 A_JumpIfInventory("RendUpgrade",1,"DeselectMain");
		RN3N A 0;
	DeselectMain:
		"####" CBA 1;
	Czumulungwa:
		TNT1 A 1 A_Lower(18);
		Loop;
	Select:
		TNT1 A 0 { 
			A_GiveInventory("RendSelected");
			SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
		}
	HonkaCzongka:
		TNT1 A 1 A_Raise(12);
		Loop;

	SingleRIdle:
		TNT1 A 0 A_JumpIfInventory("FleshrendPickupCounter",2,"RIdle");
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 1;
		"####" A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberToss");
		"####" A 0 A_JumpIfAttack("SingleRFire");
		Loop;
	SingleCaberToss:
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDN A 0;
		"####" CBA 1;
	SingleCaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
			A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
			A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
		}
		MCHT ABC 1;
		MCHT A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				} Else {
					A_SpawnItemEx("MacheterangProjectile", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "SingleCaberMain");

		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDN A 0;
		"####" ABC 1;
		Goto SingleRIdle;
	CaberToss:
		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDN A 0;
		"####" CBA 1;
	CaberMain:
		TNT1 A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		TNT1 A 1;
		TNT1 A 0 {
				A_PlaySound("Machete1/Slash",CHAN_WEAPON,0.9);
				A_PlaySound("Machete2/Slash",CHAN_AUTO,0.2);
				If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
			}
		}
		MCHT ABC 1;
		MCHT A 0 {
			A_TakeInventory("MacheteAmmo",1,TIF_NOTAKEINFINITE);
			If(CountInv("PowerStrength2")) {
				If(CountInv("PowerAmmoJunkie")) {
				A_SpawnItemEx("MacheterangBerserkProjectileJunkie", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				} Else {
					A_SpawnItemEx("MacheterangBerserkProjectile", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				}
			} Else {
				If(CountInv("PowerAmmoJunkie")) {
					A_SpawnItemEx("MacheterangProjectileJunkie", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				} Else {
					A_SpawnItemEx("MacheterangProjectile", 48, 0, 0, 35, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_TRANSFERROLL|SXF_RELATIVETOWEAPON);
				}
			}
		}
		MCHT D 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),1);
		MCHT E 1;
		MCHT F 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),1);
		MCHT G 1;
		MCHT H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),1);
		MCHT I 1;
		TNT1 A 3;
		TNT1 A 0 A_JumpIf(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo"), "CaberMain");

		3NDN A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDN A 0;
		"####" ABC 1;
		Goto RIdle;
		
	SingleRFire:
		"####" A 0 A_JumpIf((CountInv("HexenCounter") && CountInv("BlueMana") >= 4) || (!CountInv("HexenCounter") && CountInv("ShellsAmmo") >= 2),1);
		Goto SingleRNope;
	SingleRMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",CHAN_WEAPON);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,12,-5,FPF_NOAUTOAIM);
			A_AlertMonsters();
			A_Recoil(2.0);
			A_Overlay(77,"RGunflash");
			A_FireBullets(8.0, 2.0, 16 + (CountInv("RendUpgrade") ? 8 : 0) + (CountInv("TricorneShot") ? 8 : 0), 5, "ChainsmokerPuff");
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDF A 0;
		"####" A 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDY A 0;
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EFG 1;
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" I 0 {
			A_PlaySound("Fleshrend/Out",CHAN_AUTO,0.6);
			for(int swiggityswag = 0; swiggityswag < 2; swiggityswag++) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("RendUpgrade")) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("TricorneShot")) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" KL 1;
		"####" O 0 A_PlaySound("Fleshrend/In",CHAN_AUTO,0.5);
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" QRST 1;
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),4);
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 2;
		"####" A 0 A_JumpIfAttack("SingleRFire");
		Goto SingleRIdle;
	SingleRNope:
		"####" A 0 A_PlaySound("Fleshrend/Dry",CHAN_AUTO,0.8);
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDT A 0;
		"####" ABC 1;
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 8;
		Goto SingleRIdle;
	
  Punch:
		FML1 A 0 {
				A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
				If(CountInv("PowerQuadDamage")) {
					A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				}
				If(CountInv("PowerStrength2")) {
					A_SetBlend("Orange",0.05,10);
					A_PlaySound("Melee/Firepunch",CHAN_AUTO);
					Return A_Jump(256,2);
				}
				Return ResolveState(Null);
		}
		QML1 A 0;
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "Punch");
		Goto SingleLIdle;
		
	TwinPunch:
		3N2N A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RN2N A 0;
		"####" CBA 1;
	PunchFleshAndBlood:		
		FML1 A 0 {
				A_PlaySound("Punch/Swing",CHAN_AUTO,1.0);
				If(CountInv("PowerQuadDamage")) {
					A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				}
				If(CountInv("PowerStrength2")) {
					A_SetBlend("Orange",0.05,10);
					A_PlaySound("Melee/Firepunch",CHAN_AUTO);
					Return A_Jump(256,2);
				}
				Return ResolveState(Null);
		}
		QML1 A 0;
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" A 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" C 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 A_SetPitch(pitch-0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("PowerStrength2")) {
				A_CustomPunch(90, 1, 0, "FlamePunchCracker", 150 + (CountInv("KineticFist") ? 200 : 0),0.06);
			} Else {
				A_CustomPunch(30, 1, 0, "PunchCracker", 100 + (CountInv("KineticFist") ? 200 : 0));
			}
		}
	PunchContinue:
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" E 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" F 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" G 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" H 1 A_SetPitch(pitch+0.3 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" A 0 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" J 1;
		"####" A 0 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" K 1;
		TNT1 A 5;
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "PunchFleshAndBlood");
		3N2N A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RN2N A 0;
		"####" ABC 1;
		Goto LIdle;
		
	LIdle:
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" B 1;
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK),"LFire");
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ZOOM), "TwinPunch");
		Loop;
	LFire:
		"####" A 0 A_JumpIf((CountInv("HexenCounter") && CountInv("BlueMana") >= 4) || (!CountInv("HexenCounter") && CountInv("ShellsAmmo") >= 2),1);
		Goto LNope;
	LMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",CHAN_WEAPON);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,-14,-5,FPF_NOAUTOAIM);
			A_Overlay(75,"LGunflash");
			A_AlertMonsters();
			A_Recoil(2.0);
			A_FireBullets(8.0, 2.0, 16 + (CountInv("RendUpgrade") ? 8 : 0) + (CountInv("TricorneShot") ? 8 : 0), 5, "ChainsmokerPuff");
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDF A 0;
		"####" C 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" D 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		3NDL A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDL A 0;
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EFG 1;
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" A 0 { if(GetCvar("TB_SequentialShot")) {
				A_GiveInventory("ShotsWereFired",1);
			}
		}
		"####" I 0 {
			A_PlaySound("Fleshrend/Out",CHAN_AUTO,0.6);
			for(int swaggityswig = 0; swaggityswig < 2; swaggityswig++) { A_FireProjectile("FleshyCasingSpawnerReversed",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("RendUpgrade")) { A_FireProjectile("FleshyCasingSpawnerReversed",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("TricorneShot")) { A_FireProjectile("FleshyCasingSpawnerReversed",0,0,-1,-3,FPF_NOAUTOAIM); }
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" KL 1;
		"####" O 0 A_PlaySound("Fleshrend/In",CHAN_AUTO,0.5);
		"####" MNO 1;
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" QRST 1;
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),4);
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" B 2;
		"####" B 0 A_TakeInventory("ShotsWereFired",1);
		"####" A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK),"LFire");
		Goto LIdle;
	LGunflash:
		TNT1 A 4 A_Light2();
		TNT1 A 5 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	LNope:
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDT A 0;
		"####" A 0 A_PlaySound("Fleshrend/Dry",CHAN_AUTO,0.8);
		"####" DEF 1;
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" B 8;
		Goto LIdle;
	

	RIdle:
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 1;
		"####" A 0 {
			If(CountInv("MacheteGoesFast") && CountInv("MacheteAmmo")) { Return ResolveState("CaberToss"); }
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		Loop;
	RFire:
		"####" A 0 A_JumpIf((CountInv("HexenCounter") && CountInv("BlueMana") >= 4) || (!CountInv("HexenCounter") && CountInv("ShellsAmmo") >= 2),1);
		Goto RNope;
	RMain:
		"####" A 0 {
			A_PlaySound("Fleshrend/Fire",CHAN_WEAPON);
			A_FireProjectile("GunsmokeSpawner_Medium",0,0,14,-5,FPF_NOAUTOAIM);
			A_Overlay(77,"RGunflash");
			A_AlertMonsters();
			A_Recoil(2.0);
			A_FireBullets(8.0, 2.0, 16 + (CountInv("RendUpgrade") ? 8 : 0) + (CountInv("TricorneShot") ? 8 : 0), 5, "ChainsmokerPuff");
			If(CountInv("PowerQuadDamage")) {
				A_PlaySound("QuadDamage/Fire", CHAN_AUTO);
				A_SetBlend("Blue",0.1,15);
			}
		}
		3NDF A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDF A 0;
		"####" A 1 Bright A_SetPitch(pitch-2.5 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		"####" B 1 Bright A_SetPitch(pitch-1.25 * GetCvar("TB_WeaponRecoil"), SPF_INTERPOLATE);
		3NDR A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDY A 0;
		"####" A 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" BC 1;
		"####" D 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" EFG 1;
		"####" H 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),2);
		"####" I 1;
		"####" I 0 {
			A_PlaySound("Fleshrend/Out",CHAN_AUTO,0.6);
			for(int swiggityswag = 0; swiggityswag < 2; swiggityswag++) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("RendUpgrade")) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
			If(CountInv("TricorneShot")) { A_FireProjectile("FleshyCasingSpawner",0,0,-1,-3,FPF_NOAUTOAIM); }
		}
		"####" J 1 A_JumpIf(Health <= 75 || CountInv("PowerBlazing") || CountInv("BlazingBooster"),2);
		"####" KL 1;
		"####" A 0 A_PlaySound("Fleshrend/In",CHAN_AUTO,0.5);
		"####" MNO 1 ;
		"####" P 1 A_JumpIf(Health <= 50 || CountInv("PowerBlazing"),2);
		"####" QRST 1;
		"####" U 1 A_JumpIf(Health <= 25 || CountInv("PowerBlazing"),4);
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 2;
		"####" A 0 {
			If(CountInv("ShotsWereFired") && GetPlayerInput(INPUT_BUTTONS) & (BT_ATTACK)) { Return ResolveState("RFire"); }
			Else If(GetPlayerInput(INPUT_BUTTONS) & (BT_ALTATTACK)) { Return ResolveState("RFire"); }
			Return ResolveState(Null);
		}
		Goto RIdle;
	RGunflash:
		TNT1 A 4 A_Light2();
		TNT1 A 5 A_Light1();
		TNT1 A 0 A_Light0();
		Stop;
	RNope:
		3NDT A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDT A 0;
		"####" A 0 A_PlaySound("Fleshrend/Dry",CHAN_AUTO,0.8);
		"####" ABC 1;
		3NDG A 0 A_JumpIfInventory("RendUpgrade",1,2);
		RNDG A 0;
		"####" A 8;
		Goto RIdle;
	Spawn:
		RNDG X -1;
		Stop;
	}
}